<!DOCTYPE HTML>
<html>
<head>
   <title>Security in OPC UA Applications</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "html_securityimplementatioin.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">

<table width="100%" border="0" cellspacing="0" cellpadding="10">
  <tr valign="middle" bgcolor="#99CCFF">
    <td>
      <p>
        <table width="100%" border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td style="vertical-align:middle;">
              <p style="font-family:Verdana; font-size:9pt; font-style:italic;">OPC UA C++ Server &amp; Client SDK V6.00</p>
              <p style="font-family:Verdana; font-size:9pt; font-weight:bold;">Security in OPC UA Applications</p>
            </td>
          </tr>
        </table>
      </p>
    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="html_welcome.htm">Top</a>&nbsp;
     <a href="html_programmersguide.htm">Previous</a>&nbsp;
     <a href="html_clientsecuritysetup.htm">Next</a>
     </span>
    </td>
  </tr>
  <tr bgcolor="white">
      <td colspan="2">
          <h2 class="p_Heading2"><span class="f_Heading2">Security Objectives Covered by the SDK</span></h2>
<p class="p_Paragraph"><span class="f_Paragraph">OPC UA defines a flexible set of security mechanisms that can be used to guard against attacks on OPC UA clients and servers. The SDK implements different security mechanisms that allows you to reach the following security objectives, depending on the security requirements of the site to which your application is deployed:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph" style="font-weight: bold;">Message integrity</span><span class="f_Paragraph"> ensures that information that is exchanged between a client and a server cannot be modified by an attacker without being noticed by the communication partners.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph" style="font-weight: bold;">Message confidentiality</span><span class="f_Paragraph"> protects messages from being read by an attacker.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph" style="font-weight: bold;">Application authentication</span><span class="f_Paragraph"> allows applications to identify each other. When an application uses application authentication, it will communicate only with those applications that are deemed trusted.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph" style="font-weight: bold;">User authentication</span><span class="f_Paragraph"> ensures that only trusted users are allowed to access the services a server provides.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph" style="font-weight: bold;">User authorization</span><span class="f_Paragraph"> allows server applications to grant certain users certain rights to access information from a server.</span></td></tr></table></div><h2 class="p_Heading2"><span class="f_Heading2">Security Mechanisms Provided by the SDK</span></h2>
<p class="p_Paragraph"><span class="f_Paragraph">OPC UA addresses the security objectives depicted above in different communication layers:</span></p>
<p class="p_Paragraph"><img src="communicationmodel.png" width="529" height="272" alt="CommunicationModel" style="width:529px;height:272px;border:none" /></p>
<p class="p_Paragraph"><span class="f_Paragraph">Each connection between an OPC UA server and a client is based upon a </span><span class="f_Paragraph" style="font-weight: bold;">secure channel</span><span class="f_Paragraph"> that provides mechanisms to ensure the confidentiality and integrity of exchanged messages and provides application authentication. On top of the secure channel, a </span><span class="f_Paragraph" style="font-weight: bold;">session</span><span class="f_Paragraph"> provides services for user authorization and authentication.</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">Message Integrity and Confidentiality</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">The mechanisms to ensure the integrity and confidentiality of messages rely on public-key cryptography. With public-key cryptography, each communication partner owns a pair of cryptographic keys: a private key that is kept secret and a public key that is made available to the communication partners. Digital certificates are used to distribute public keys to communication partners. Therefore, all OPC UA applications that want to ensure the integrity and/or confidentiality of messages need to create a so called </span><span class="f_Paragraph" style="font-weight: bold;">application instance certificate</span><span class="f_Paragraph">. An application instance certificate is unique. It is created for exactly one installed instance of an OPC UA application.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The integrity of messages is guaranteed by appending digital signatures to messages. With digital signatures, the sender signs a message with its private key and the recipient uses the public key of the sender to verify the message.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Confidentiality of messages is guaranteed by public-key encryption. The sender encrypts the message with the public key of the recipient and only the recipient is able to decrypt the message with its private key. Since asymmetric encryption algorithms used in public-key encryption tend to be CPU-intensive, OPC UA uses public-key cryptography only when creating a secure channel to agree on a common secret. Further messages are encrypted using symmetric encryption algorithms that make use of the common secret.</span></p>
<h3 class="p_Heading3"><a id="html.securityimplementatioin.applicationauthentication"></a><span class="f_Heading3">Application Authentication</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">OPC UA applications use application instance certificates to authenticate themselves to other applications. OPC UA servers can be configured with a list of application instance certificates and/or root certificates of a certificate authority (CA), the </span><span class="f_Paragraph" style="font-weight: bold;">trust list</span><span class="f_Paragraph">, that is consulted whenever a client wants to establish a secure connection with the server. Only if the instance certificate of the client or one certificate of the issuers in the issuer chain is found within this list, a secure channel is established.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">An additional list of CA certificates can be configured - the </span><span class="f_Paragraph" style="font-weight: bold;">issuer certificate list</span><span class="f_Paragraph">. The certificates within this list are used for certificate chain validation only, i.e. verifying that the named issuer of a certificate has really issued this certificate. The certificate chain validation ends at the root certificate and fails if one certificate names a wrong issuer, the issuers certificate is not available for validation or the certificate was revoked by the issuer (in the CRL of the issuer). </span><br />
<span class="f_Paragraph">Once the certificate chain validation succeeded, the application instance certificate is trusted, if this certificate or any certificate within the chain is available within the trust list.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Private keys associated with a certificate may be compromised. When this happens, the associated certificate can no longer be trusted and has to be revoked. For that purpose, an OPC UA server can be configured with a </span><span class="f_Paragraph" style="font-weight: bold;">certificate revocation list</span><span class="f_Paragraph"> (CRL) that is a list of certificates that are no longer being trusted by a server.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Some checks (e.g. complete or partial CRL check) can be skipped by configuration.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Some specific validations errors (e.g. valid period of certificate) can be ignored by configuration.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">See also <a href="html_setupcertificates.htm" class="topiclink">Setting up a Certificate Store</a>.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The PKI configuration how application authentication is performed shall be set using the <a href="class_softing_o_p_c_toolbox5_1_1_application.htm#class_softing_o_p_c_toolbox5_1_1_application_1acd666a38804279b18da3266355d75a13" class="topiclink">Application::setPkiStoreConfiguration</a>. The following code illustrates the usage of this method.</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">ObjectPointer&lt;Application&gt;&nbsp;application&nbsp;=&nbsp;Application::instance();</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">PkiStoreConfiguration&nbsp;pkiConfiguration;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">pkiConfiguration.setCertificateTrustListLocation(_T(&quot;&lt;Path&nbsp;to&nbsp;the&nbsp;folder&nbsp;containing&nbsp;trusted&nbsp;DER-encoded&nbsp;certificates&gt;&quot;));</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">//...</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">application-&gt;setPkiStoreConfiguration(&amp;pkiConfiguration);</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">//&nbsp;...</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">application-&gt;start();</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">&nbsp;</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">See <a href="class_softing_o_p_c_toolbox5_1_1_pki_store_configuration.htm" class="topiclink">PkiStoreConfiguration</a> for a complete description what configuration options are available.</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">Authentication and Authorization of Users</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">The SDK enables clients to pass user credentials to a server when activating a session. The SDK supports different </span><span class="f_Paragraph" style="font-weight: bold;">authentication mechanisms</span><span class="f_Paragraph">:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">Anonymous authentication</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">Username/password authentication</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">X.509 certificate-based authentication</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">Authentication based on WS-Security tokens (issued tokens)</span></td></tr></table></div><p class="p_Paragraph"><span class="f_Paragraph">An OPC UA server application uses the passed authentication token to grant or deny access to the server.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Server applications implement user authorization by defining </span><span class="f_Paragraph" style="font-weight: bold;">access rights</span><span class="f_Paragraph"> for nodes. The SDK allows server applications to define user groups and different user access schemes for nodes.</span></p>
<h2 class="p_Heading2"><a id="html.securityimplementatioin.applicationauthenticationstrategies"></a><span class="f_Heading2">Application Authentication Use Cases</span></h2>
<h3 class="p_Heading3"><span class="f_Heading3">No Security</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">If the communication does not use security the application instance certificate shall not be validated. </span></p>
<p class="p_Paragraph"><span class="f_Paragraph">However the OPC UA specification 1.01 still required passing the certificate during opening a communication channel (client) and returning endpoints (server).</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Since OPC UA specification 1.02 it is allowed to omit the certificates during these calls if no certificate is required (neither for message signing / encryption nor for user authentication encryption). However it is strongly recommended to pass a certificate anyway because opposite applications (client or server) may fail if they are implementing OPC UA specification 1.01.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">For this configuration a dummy certificate can be used for all applications. Neither server nor client need to set any <a href="class_softing_o_p_c_toolbox5_1_1_pki_store_configuration.htm" class="topiclink">PkiStoreConfiguration</a>, but a <a href="class_softing_o_p_c_toolbox5_1_1_pki_store_configuration.htm" class="topiclink">PkiStoreConfiguration</a> which refers to empty folders will work as well.</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">Self-Signed Certificates</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">A very simple strategy is to generate a self-signed application instance certificate for every application.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Both, server and client need to configure a <a href="class_softing_o_p_c_toolbox5_1_1_pki_store_configuration.htm" class="topiclink">PkiStoreConfiguration</a> via <a href="class_softing_o_p_c_toolbox5_1_1_application.htm#class_softing_o_p_c_toolbox5_1_1_application_1acd666a38804279b18da3266355d75a13" class="topiclink">Application::setPkiStoreConfiguration()</a>.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The client certificates shall be added to the trust list folder of the server PKI store and the server certificates shall be added to the trust list folder of the client PKI store.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The same server PKI store can be used for all servers and the same client PKI store can be used for all clients.</span><br />
<span class="f_Paragraph">In this case every client is allowed to connect to all servers (until the period of the certificates expires). </span></p>
<p class="p_NoteHeader"><span class="f_NoteHeader">Note:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">The PKI stores shall be stored at a private place and shall be accessible to application administrators only</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">The private keys shall not be provided to all applications, a private key should be private to one application and stored on one machine only.</span></td></tr></table></div><p class="p_Paragraph"><span class="f_Paragraph">The simple strategy is useful for a small number off applications with a large certificate validity period.</span><br />
<span class="f_Paragraph">Additionally the rate of change within applications should be small.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">In case of a large number of clients or high change rate the maintenance work of updating and deploying certificates increases.</span><br />
<span class="f_Paragraph">A huge number of certificates in a PKI store also decreases the performance during validation as the search for files takes longer.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Maintenance: Adding / removing / updating application instance certificate requires deployment of the complete certificate store.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">For this strategy neither issuer certificate list nor CRL checks are necessary.</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">Using CA</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">The more application instances are needed, the more maintenance of the PKI store is necessary.</span><br />
<span class="f_Paragraph">For such configurations the use of a CA is recommended.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">A CA is a special certificate which is used to issue (sign) other certificates.</span><br />
<span class="f_Paragraph">A single (self-signed) root CA is sufficient for medium to large number of applications.</span><br />
<span class="f_Paragraph">Every application gets an own certificate issued by the same CA.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The trust list in the PKI stores just hold this CA and since all application instance certificates are issued by this CA all applications are trusted.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">If applications are removed from the configuration, their certificate shall be revoked, i.e. a new CRL entry is produced.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Maintenance: Deployment is necessary for the CA and its CRL. Adding / updating application instance certificates need no deployment at all.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">For this strategy no issuer certificate list is necessary, CRL checks can be enabled optionally.</span><br />
<span class="f_Paragraph">For this strategy it is recommended to use a <a href="global_discovery_server.htm" class="topiclink">Global Discovery Server</a> (GDS) to deploy the certificates and PKI stores.</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">Using Multiple CA Levels</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">In case of very large companies there is a use case that a company wide root CA exists, which issues intermediate CAs, e.g. one intermediate CA for each facility.</span><br />
<span class="f_Paragraph">These intermediate CAs can issue again other CAs, e.g. one for every production site.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Finally an intermediate CA issues application instance certificates for a group of applications.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">In case the server application shall not trust every certificate of the whole company but only some intermediate CAs, store the desired intermediate CAs into the trust list folder.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">To validate the certificates, the entire certificate chain must be known to the SDK.</span><br />
<span class="f_Paragraph">To achieve this, store the root CA and all other intermediate CAs into the issuer list folder.</span><br />
<span class="f_Paragraph">More precisely only those intermediate CAs are required which are involved in a chain from any leaf certificate to the root CA, where the chain passes through one of a trusted intermediate CA.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">If the certificate chain validation succeeded and any certificate within the chain is found in the trust list, the application is trusted.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Maintenance: Deployment is necessary for the CAs and its CRLs. Adding / updating application instance certificates needs no deployment at all.</span></p>
<h3 class="p_Heading3"><span class="f_Paragraph">For this strategy the use of the issuer certificate list is necessary, CRL checks can be enabled optionally.</span><br />
<span class="f_Paragraph">For this strategy it is recommended to use a <a href="global_discovery_server.htm" class="topiclink">Global Discovery Server</a> (GDS) to deploy the certificates and PKI stores.</span></h3>
<h3 class="p_Heading3"><span class="f_Heading2">Setting up Security for your Application</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">The following topics give you instructions on how to apply the discussed security mechanisms to your applications:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph"><a href="html_clientsecuritysetup.htm" class="topiclink">Security in Client Applications</a>: Describes how to set up security for OPC UA client applications.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph"><a href="html_serverendpointsecuritysetup.htm" class="topiclink">Security in Server Applications</a>: Describes how to set up security for OPC UA server applications.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph"><a href="global_discovery_server.htm" class="topiclink">Global Discovery Server</a>: Describes how to deploy certificates from one central location using a GDS.</span></td></tr></table></div>
      </td>
  </tr>
  <tr>
    <td colspan="2" style="padding-top: 0px;">
         <p>
            <hr />
            <a href="mailto:support.automation@softing.com?subject=OPC UA C++ Server &amp; Client SDK V6.00 Documentation Feedback:Page=html_securityimplementatioin.htm">Send comments on this topic.</a>
         </p>
         <p>
            Copyright © Softing Industrial Automation GmbH&nbsp;2022
         </p>
    </td>
  </tr>
</table>
</body>
</html>
