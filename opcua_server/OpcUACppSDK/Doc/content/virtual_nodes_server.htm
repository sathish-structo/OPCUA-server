<!DOCTYPE HTML>
<html>
<head>
   <title>Virtual Nodes Server</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "virtual_nodes_server.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">

<table width="100%" border="0" cellspacing="0" cellpadding="10">
  <tr valign="middle" bgcolor="#99CCFF">
    <td>
      <p>
        <table width="100%" border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td style="vertical-align:middle;">
              <p style="font-family:Verdana; font-size:9pt; font-style:italic;">OPC UA C++ Server &amp; Client SDK V6.00</p>
              <p style="font-family:Verdana; font-size:9pt; font-weight:bold;">Virtual Nodes Server</p>
            </td>
          </tr>
        </table>
      </p>
    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="html_welcome.htm">Top</a>&nbsp;
     <a href="samplepubsub.htm">Previous</a>&nbsp;
     <a href="samplereverseconnectivity.htm">Next</a>
     </span>
    </td>
  </tr>
  <tr bgcolor="white">
      <td colspan="2">
          <p class="p_Paragraph"><span class="f_Paragraph">This sample shows how to implement a server using nodes which are not stored in the SDK.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">See <a href="html_programmersguide_how_to_server_dynamic_adressspace.htm" class="topiclink">Virtual Nodes</a> for the common description of virtual nodes.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">This sample stores specific instance nodes as virtual nodes and stores the node information on an apparently external system.</span><br />
<span class="f_Paragraph">The server generates the service responses from this external node data.</span><br />
<span class="f_Paragraph">The only exception to this common handling is the handling of <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_monitored_item.htm" class="topiclink">MonitoredItems</a>.</span><br />
<span class="f_Paragraph">In case a node shall be monitored, then the server creates a temporary SDK node for this virtual node and lets the SDK take care to feed the <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_monitored_item.htm" class="topiclink">MonitoredItems</a>. </span></p>
<p class="p_NoteHeader"><span class="f_NoteHeader">Note:</span><span class="f_Paragraph"> There are other possible use cases for virtual nodes, e.g. an aggregating server where the responses from the aggregated server can be forwarded. Those other use cases are not covered by this sample.</span></p>
<p class="p_NoteHeader"><span class="f_NoteHeader">Note:</span><span class="f_Paragraph"> It is also possible to make all other node types virtual (<a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_object_type.htm" class="topiclink">ObjectTypes</a>, <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_object_type.htm" class="topiclink">EventTypes</a>, <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_variable_type.htm" class="topiclink">VariableTypes</a>, <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_reference_type.htm" class="topiclink">ReferenceTypes</a>, <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_data_type.htm" class="topiclink">DataTypes</a> and <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_method.htm" class="topiclink">Methods</a>), but those nodes usually exist only once per address space.</span><br />
<span class="f_Paragraph">If the goal of using virtual nodes is to save memory then the used memory mainly comes from the many instances and a few globally used nodes make no difference.</span><br />
<span class="f_Paragraph">Especially for virtual type nodes it can get difficult to detect type dependencies.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">&nbsp;</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">Where to Find</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">The sample projects are located in the directory: &quot;</span><span class="f_FixedSize">&lt;InstallDir&gt;/Apps/Samples/Cpp/VirtualNodes</span><span class="f_Paragraph">&quot; and the sources are in the subdirectoriy &quot;</span><span class="f_FixedSize">VirtualNodesServer</span><span class="f_Paragraph">&quot;.</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">&nbsp;</span></h3>
<h2 class="p_Heading2"><span class="f_Heading2">Overview</span></h2>
<p class="p_Paragraph"><span class="f_Paragraph">This sample is quite complex and involves several classes as it needs to override all node and reference related services:</span></p>
<p class="p_Paragraph"><img src="virtualnodesserver_zoom80.png" width="810" height="425" alt="VirtualNodesServer" style="width:810px;height:425px;border:none" /></p>
<h3 class="p_Heading3"><span class="f_Heading3">ExampleDataSource</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">This class is a random example that allows to read, write and perform some actions.</span><br />
<span class="f_Paragraph">It has no dependencies to OPC UA or any other classes.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Possible adaptions:</span><br />
<span class="f_Paragraph">You are free to replace this example data source by anything else.</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">VirtualNodeCache</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">The purpose of this class is to give high-level access to virtual nodes and to handle all service requests which involve virtual nodes.</span><br />
<span class="f_Paragraph">It stores just a few node settings on its own, most of the node data is sourced out to the DummyDataBase.</span><br />
<span class="f_Paragraph">This class handles the virtual nodes in common and has no dependencies to the example data source.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Possible adaptions:</span><br />
<span class="f_Paragraph">Here you can change which data shall be stored for virtual nodes and how or where to store the data.</span><br />
<span class="f_Paragraph">The current implementation uses some simplifications for several node settings, e.g. use predefined reference types, depending on in which list a node is stored to simplify the node's security settings to a bool instead of using the OPC UA <a href="class_softing_o_p_c_toolbox5_1_1_role_permission_type.htm" class="topiclink">RolePermissionType</a>.</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">DummyDataBase</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">This class is an example replacement for a real data base system.</span><br />
<span class="f_Paragraph">The interfaces of this class request and provide information as it would be an SQL data base with some predefined tables.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">One use case for virtual nodes is to save RAM as most node data can be sourced out.</span><br />
<span class="f_Paragraph">The purpose of this class is to decouple the storage for most of the low-level node data from the </span><span class="f_Reference">VirtualNodeCache</span><span class="f_Paragraph">.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Possible adaptions:</span><br />
<span class="f_Paragraph">You can replace this class by a real data base system or by any other way to store and access the raw node data.</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">DataSourceMapping</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">This class is a layer to map the data source to OPC UA.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">It provides helper methods for the specific mapping, e.g. how to generate the <a href="class_softing_o_p_c_toolbox5_1_1_node_id.htm" class="topiclink">NodeIds</a> and performs the service requests to the data source.</span><br />
<span class="f_Paragraph">As the entire address space consists of nodes stored in the SDK and virtual nodes, the DataSourceMapping needs to access both, the <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_address_space_root.htm" class="topiclink">Server::AddressSpaceRoot</a> and the </span><span class="f_Reference">VirtualNodeCache</span><span class="f_Paragraph">.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Possible adaptions:</span><br />
<span class="f_Paragraph">This class highly depends on the used data source and the interfaces and functionality of the </span><span class="f_Reference">VirtualNodeCache</span><span class="f_Paragraph">.</span><br />
<span class="f_Paragraph">Adapt the </span><span class="f_Reference">DataSourceMapping</span><span class="f_Paragraph"> whenever the interfaces to the data source or </span><span class="f_Reference">VirtualNodeCache</span><span class="f_Paragraph"> change.</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">CustomEndpoint</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">This class is derived from <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_endpoint.htm" class="topiclink">Server::Endpoint</a> and overrides the callback <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_endpoint.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_endpoint_1a0629090cbc9ca8f67f2d651eab87e358" class="topiclink">onAuthenticateUser()</a>.</span><br />
<span class="f_Paragraph">It passes the user authentication to the </span><span class="f_Reference">DataSourceMapping</span><span class="f_Paragraph"> to be able to demonstrate user access rights on virtual nodes.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Possible adaptions:</span><br />
<span class="f_Paragraph">The only purpose of this class is to forward the authentication callback.</span><br />
<span class="f_Paragraph">If no user authentication is is required, then this class can be removed and a normal <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_endpoint.htm" class="topiclink">Server::Endpoint</a> can be used instead.</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">ServiceTransactions</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">Even though there are many different service transaction classes, they all follow the same pattern:</span><br />
<span class="f_Paragraph">They are derived classes from the SDK service transactions.</span><br />
<span class="f_Paragraph">They evaluate if a service request targets or involves a virtual node and pass such requests to the </span><span class="f_Reference">VirtualNodeCache</span><span class="f_Paragraph">, all requests for non-virtual nodes are passed to the SDK's default implementation.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">In case of the Read and Write services the </span><span class="f_Reference">VirtualNodeCache</span><span class="f_Paragraph"> reports whether the request was handled completely by the node cache or if the request requires further processing on the data source.</span><br />
<span class="f_Paragraph">In this case the request will be completed by the </span><span class="f_Reference">DataSourceMapping</span><span class="f_Paragraph">.</span></p>
<p class="p_Paragraph"><span class="f_NoteHeader">Note:</span><span class="f_Paragraph"> Even though also the CustomMethodCallTransaction can encounter requests for the data source, it is implemented slightly different than for the </span><span class="f_Reference">CustomReadTransaction</span><span class="f_Paragraph"> and </span><span class="f_Reference">CustomWriteTransaction</span><span class="f_Paragraph"> and doesn't pass the service handling directly to the </span><span class="f_Reference">DataSourceMapping</span><span class="f_Paragraph">.</span><br />
<span class="f_Paragraph">The reason is that the Method nodes themselves are stored as SDK nodes and only the related Object nodes are virtual.</span><br />
<span class="f_Paragraph">The </span><span class="f_Reference">VirtualNodeCache</span><span class="f_Paragraph"> resolves the error status for the unknown Object node and the MethodCall executions on the </span><span class="f_Reference">DataSourceMapping's</span><span class="f_Paragraph"> Method classes can directly access the </span><span class="f_Reference">ExampleDataSource</span><span class="f_Paragraph">.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The service transactions for HistoryRead (HistoryReadRaw, HistoryReadProcessed and HistoryReadEvent) have just a minimal implementation to return </span><span class="f_Reference">EnumStatusCode_BadNotReadable</span><span class="f_Paragraph"> instead of </span><span class="f_Reference">EnumStatusCode_BadNodeIdUnknown</span><span class="f_Paragraph"> for virtual nodes.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Possible adaptions:</span><br />
<span class="f_Paragraph">The transactions can be changed depending on whether you need to support more or less services.</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">CustomSubscription</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">This class is derived from <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_subscription.htm" class="topiclink">Server::Subscription</a> and overrides the callbacks <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_subscription.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_subscription_1adb03a5fe96e251f989d03a5c641b5f0b" class="topiclink">handleCreateMonitoredItems</a>, <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_subscription.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_subscription_1ac9b2032410ca4eba0252865d31ddc99c" class="topiclink">handleModifyMonitoredItems</a> and <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_subscription.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_subscription_1a75b4931dcf2609afed7fe626d4044b0e" class="topiclink">handleDeleteMonitoredItems</a>.</span><br />
<span class="f_Paragraph">It serves as entry point for the MonitoredItem services instead of using three separate service transaction classes.</span><br />
<span class="f_Paragraph">Those three callbacks are similar as the </span><span class="f_Reference">handleRequests()</span><span class="f_Paragraph"> callbacks on the other service transactions.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">When the first <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_monitored_item.htm" class="topiclink">Server::MonitoredItem</a> is created for a virtual node, then the </span><span class="f_Reference">VirtualNodeCache</span><span class="f_Paragraph"> creates a temporary SDK node for this.</span><br />
<span class="f_Paragraph">The </span><span class="f_Reference">DataSourceMapping</span><span class="f_Paragraph"> provides value updates for this temporary node to let the SDK provide the value changes to its MonitoredItems.</span></p>
<p class="p_Paragraph"><span class="f_NoteHeader">Note:</span><span class="f_Paragraph"> All other service handlings still provide the response from the VirtualNodeCache or the ExampleDataSource instead of using the temporary SDK node.</span><br />
<span class="f_Paragraph">Nonetheless all services need to be aware that there can be a temporary SDK node for the current virtual node.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Possible adaptions:</span><br />
<span class="f_Paragraph">The current implementation supports only MonitoredItems for data changes on virtual node.</span><br />
<span class="f_Paragraph">If the virtual nodes shall support event notifications, then the validation and value reporting needs to be adapted.</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">CustomCreator</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">This class is derived from <a href="class_softing_o_p_c_toolbox5_1_1_creator.htm" class="topiclink">Creator</a> and tells the SDK to use the derived classes for the service transactions and subscription.</span><br />
<span class="f_Paragraph">The </span><span class="f_Reference">CustomCreator</span><span class="f_Paragraph"> holds a reference to the </span><span class="f_Reference">DataSourceMapping</span><span class="f_Paragraph"> and </span><span class="f_Reference">VirtualNodeCache</span><span class="f_Paragraph"> instances and assigns them to the derived transaction and subscription classes (this dependency is not displayed in the UML diagram).</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">&nbsp;</span></p>
<h2 class="p_Heading2"><span class="f_Heading2">Running the Sample</span></h2>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">The server needs an existing application instance certificate and it must be in the correct directory. See <a href="html_setupcertificates.htm" class="topiclink">Setting up a Certificate Store</a> for how to create the demo certificate store. The path to the certificate is specified at the top of </span><span class="f_FixedSize">VirtualNodesServer.cpp</span><span class="f_Paragraph">, adapt it if it doesn't fit.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">Compile and start the sample application </span><span class="f_Reference">VirtualNodesServer</span><span class="f_Paragraph">. The server is listening for incoming connections at the address &quot;</span><span class="f_FixedSize">opc.tcp://localhost:4880</span><span class="f_Paragraph">&quot;.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">Connect to the sample server with your favorite OPC UA client (e.g. Softing OPC UA Client) and perform browse, read, write, monitor and method calls on several instance nodes.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 13px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">All objects and variables in namespace 1 are virtual nodes (except instance declarations on the type definition nodes)</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 13px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">The </span><span class="f_FixedSize">&quot;Location&quot;</span><span class="f_Paragraph"> variables below the Car instances are writable and result in a write call to the data source.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 13px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">The &quot;</span><span class="f_FixedSize">SimpleCacheVariable&quot;</span><span class="f_Paragraph"> below &quot;</span><span class="f_FixedSize">Objects&quot;</span><span class="f_Paragraph"> folder is also writable but its value is stored only in the </span><span class="f_Reference">VirtualNodeCaches</span><span class="f_Paragraph">.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 13px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">The </span><span class="f_FixedSize">&quot;ParkingArea&quot;</span><span class="f_Paragraph"> has a hidden variable </span><span class="f_FixedSize">&quot;OpenTickets&quot;</span><span class="f_Paragraph">, which is neither visible nor readable to anonymous users.</span><br />
<span class="f_Paragraph">This variable is browsable and readable when you login via username-password as &quot;admin&quot;-&quot;admin&quot; or &quot;operator&quot;-&quot;operator&quot;.</span></td></tr></table></div><p class="p_Paragraph"><span class="f_Paragraph">&nbsp;</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">Points of Interest</span></h3>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">How to detect and intercept the service handling to virtual nodes for the various services (see the several </span><span class="f_Reference">ServiceTransaction</span><span class="f_Paragraph"> classes and </span><span class="f_Reference">CustomSubscription</span><span class="f_Paragraph">).</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">How to provide the correct service responses for the several services, especially for the Browse and TranslateBrowsePathsToNodeIds services (see </span><span class="f_Reference">VirtualNodeCache</span><span class="f_Paragraph"> and </span><span class="f_Reference">CustomTranslateBrowsePathsToNodeIdsTransaction::handleRequests()</span><span class="f_Paragraph">).</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">Which contents need to be stored for virtual nodes to be able to report valid nodes (see DummyDataBase, VirtualNodeCache::getReferenceDescriptions() and VirtualNodeCache::handleReadRequests())</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 13px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">Several attributes of nodes are optional and can be left out when not used or are meant for an unused feature (e.g. WriteMask to allow to write any node attribute).</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 13px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">Most references can be identified and generated by knowing a few dependencies between nodes (e.g. HasTypeDefinition to type, Organizes from folder, HasComponent and HasProperty to child nodes)</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">How to adapt the sample code to your own needs?</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 13px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">Use a different data source and different nodes?</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 26px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#9642;</span></td><td style="border:none"><span class="f_Paragraph">Replace </span><span class="f_Reference">ExampleDataSource</span><span class="f_Paragraph"> and adapt </span><span class="f_Reference">DataSourceMapping</span><span class="f_Paragraph">.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 13px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">Use a different node storage?</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 26px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#9642;</span></td><td style="border:none"><span class="f_Paragraph">Replace </span><span class="f_Reference">DummyDataBase</span><span class="f_Paragraph"> and adapt </span><span class="f_Reference">VirtualNodeCache</span><span class="f_Paragraph">.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 13px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">Adapt the stored contents for virtual nodes?</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 26px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#9642;</span></td><td style="border:none"><span class="f_Paragraph">Adapt </span><span class="f_Reference">DummyDataBase</span><span class="f_Paragraph"> and </span><span class="f_Reference">VirtualNodeCache</span><span class="f_Paragraph">.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 13px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">Extend or reduce the amount of supported services?</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 26px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#9642;</span></td><td style="border:none"><span class="f_Paragraph">Adapt the related </span><span class="f_Reference">ServiceTransaction</span><span class="f_Paragraph"> or </span><span class="f_Reference">CustomSubscription</span><span class="f_Paragraph"> or </span><span class="f_Reference">CustomEndpoint</span><span class="f_Paragraph"> the </span><span class="f_Reference">VirtualNodeCache</span><span class="f_Paragraph"> and </span><span class="f_Reference">DummyDataBase</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 13px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">...</span></td></tr></table></div>
      </td>
  </tr>
  <tr>
    <td colspan="2" style="padding-top: 0px;">
         <p>
            <hr />
            <a href="mailto:support.automation@softing.com?subject=OPC UA C++ Server &amp; Client SDK V6.00 Documentation Feedback:Page=virtual_nodes_server.htm">Send comments on this topic.</a>
         </p>
         <p>
            Copyright © Softing Industrial Automation GmbH&nbsp;2022
         </p>
    </td>
  </tr>
</table>
</body>
</html>
