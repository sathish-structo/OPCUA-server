<!DOCTYPE HTML>
<html>
<head>
   <title>Custom Handling of Write Requests</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "html_customhandlingofwriterequests.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">

<table width="100%" border="0" cellspacing="0" cellpadding="10">
  <tr valign="middle" bgcolor="#99CCFF">
    <td>
      <p>
        <table width="100%" border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td style="vertical-align:middle;">
              <p style="font-family:Verdana; font-size:9pt; font-style:italic;">OPC UA C++ Server &amp; Client SDK V6.00</p>
              <p style="font-family:Verdana; font-size:9pt; font-weight:bold;">Custom Handling of Write Requests</p>
            </td>
          </tr>
        </table>
      </p>
    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="html_welcome.htm">Top</a>&nbsp;
     <a href="html_customhandlingofreadrequests.htm">Previous</a>&nbsp;
     <a href="html_serverstep2sample.htm">Next</a>
     </span>
    </td>
  </tr>
  <tr bgcolor="white">
      <td colspan="2">
          <p class="p_Paragraph"><a id="hdr"></a><span class="f_Paragraph">In this tutorial all requests (read, write, execute) are handled synchronously, please make sure not to block these calls. For how to handle a request asynchronously, refer to the corresponding sample.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">There are two steps to the handling of write requests:</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">This approach is useful if every write request must be handled as a separate action, i.e. multiple write requests cannot be combined (e.g. within one communication to an underlying device).</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:18px"><span style="font-size:9pt; font-family: 'Verdana';color:#000000;">1.</span></td><td style="border:none"><span class="f_List">Create a custom subclass of the desired Node class (e.g. BaseNode, Variable, Object ...) with an overriden <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_base_node.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_base_node_1a2e00244674cd1e050a7726b4c941b347" class="topiclink">handleWriteRequest()</a> method. (See also <a href="html_lifetimeoftoolkitobjects.htm" class="topiclink">Lifetime of SDK Objects</a> for how to implement the recommended </span><span class="f_FixedSize">create()</span><span class="f_List"> method for smart pointerusage)</span></td></tr></table></div><p class="p_CodeExample"><span class="f_CodeExample">class&nbsp;MyVariable&nbsp;:&nbsp;public&nbsp;Server::Variable</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">{</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;...</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">public:</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;virtual&nbsp;EnumStatusCode&nbsp;handleWriteRequest(Server::WriteTransaction*&nbsp;transaction,&nbsp;Server::WriteRequest*&nbsp;request);</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;...</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">};</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:18px"><span style="font-size:9pt; font-family: 'Verdana';color:#000000;">2.</span></td><td style="border:none"><span class="f_Paragraph">Implement the <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_base_node.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_base_node_1a2e00244674cd1e050a7726b4c941b347" class="topiclink">handleWriteRequest()</a> method:</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">Filter the requests to the desired </span><span class="f_Reference">Attribute</span><span class="f_Paragraph"> (usually only the </span><span class="f_Reference">Value Attribute</span><span class="f_Paragraph"> of a </span><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_variable.htm" class="topiclink">Variable</a><span class="f_Paragraph">) and refer the other requests to the default implementation.</span></td></tr></table></div><p class="p_CodeExample"><span class="f_CodeExample">EnumAttributeId&nbsp;attribId&nbsp;=&nbsp;request-&gt;getWriteValue()-&gt;getAttributeId();</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">if(attribId&nbsp;!=&nbsp;EnumAttributeId_Value)</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">{</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;return&nbsp;Server::Variable::handleWriteRequest(transaction,&nbsp;request);</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">}</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 13px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">Check the </span><span class="f_Reference">index range</span><span class="f_Paragraph"> (applies only to arrays and indicates that the client only wants a certain part of it) and handle it properly -- if </span><span class="f_Reference">index ranges</span><span class="f_Paragraph"> shall not be supported return a Bad_IndexRangeNoData status code.</span></td></tr></table></div><p class="p_CodeExample"><span class="f_CodeExample">//&nbsp;e.g.&nbsp;here&nbsp;we&nbsp;have&nbsp;a&nbsp;scalar&nbsp;value,&nbsp;no&nbsp;index&nbsp;ranges&nbsp;are&nbsp;allowed</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">if(request-&gt;getWriteValue()-&gt;getIndexRange()-&gt;getDimensions()&nbsp;!=&nbsp;0)</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">{</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;DataValue&nbsp;dv;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;dv.setStatusCode(EnumStatusCode_BadIndexRangeNoData);</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;writeRequest-&gt;setDataValue(dv);</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;writeRequest-&gt;complete();</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">}</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 24px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">Get the <a href="class_softing_o_p_c_toolbox5_1_1_data_value.htm" class="topiclink">DataValue</a> containing the value to write.</span></td></tr></table></div><p class="p_CodeExample"><span class="f_CodeExample">DataValue&nbsp;writeValue&nbsp;=&nbsp;request-&gt;getWriteValue()-&gt;getDataValue();</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">//possibly&nbsp;check,&nbsp;if&nbsp;the&nbsp;value&nbsp;to&nbsp;write&nbsp;is&nbsp;within&nbsp;a&nbsp;desired&nbsp;range&nbsp;(e.g.&nbsp;InstrumentRange,&nbsp;see&nbsp;<a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_analog_item.htm" class="topiclink">AnalogItem</a>)&nbsp;and&nbsp;write&nbsp;the&nbsp;value&nbsp;on&nbsp;the&nbsp;device/process</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">//see&nbsp;how&nbsp;this&nbsp;is&nbsp;done&nbsp;in&nbsp;Server_3</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">//in&nbsp;this&nbsp;sample&nbsp;we&nbsp;will&nbsp;only&nbsp;update&nbsp;the&nbsp;cache&nbsp;of&nbsp;the&nbsp;variable&nbsp;with&nbsp;the&nbsp;new&nbsp;value</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 13px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">After the write is done set a status code indicating if the write was successful and update the value in the Node (e.g. the </span><span class="f_Reference">Value Attribute</span><span class="f_Paragraph"> of a </span><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_variable.htm" class="topiclink">Variable</a>).</td></tr></table></div><p class="p_CodeExample"><span class="f_CodeExample">EnumStatusCode&nbsp;writeResult&nbsp;=&nbsp;EnumStatusCode_Good;&nbsp;&nbsp;&nbsp;//&nbsp;e.g.&nbsp;writing&nbsp;was&nbsp;successful</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">request-&gt;setStatusCode(writeResult);&nbsp;//provide&nbsp;the&nbsp;status&nbsp;code&nbsp;to&nbsp;the&nbsp;client</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">if(StatusCode::isGood(writeResult))</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">{</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;EnumStatusCode&nbsp;updateCacheResult&nbsp;=&nbsp;setDataValue(writeValue);</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;REPORT_ON_ERROR(updateCacheResult,&nbsp;_T(&quot;Failed&nbsp;to&nbsp;update&nbsp;the&nbsp;cached&nbsp;value&quot;));</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">}</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 13px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">Complete the request. This call can even be made asynchronously after the request handler returned.</span></td></tr></table></div><p class="p_CodeExample"><span class="f_CodeExample">request-&gt;complete();</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 13px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Courier New';color:#000000;">o</span></td><td style="border:none"><span class="f_Paragraph">Return from the handler with a status code.</span></td></tr></table></div><p class="p_CodeExample"><span class="f_CodeExample">return&nbsp;EnumStatusCode_Good;</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">&nbsp;</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">Create instances of this custom subclass instead of the usual class when an individual handling shall be performed.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">&nbsp;</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">Note:</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">In the context of the handlers only non-blocking actions shall be performed (some core functionalities are blocked until all request handler returned).</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The request remains until it is completed, which is why it is very important to always complete the request.</span></p>
<h3 class="p_Heading3"><a id="notewriterequest"></a><span class="f_Heading3">Note:</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">The write request contains beneath the value and status code additionally source and server timestamps (see <a href="class_softing_o_p_c_toolbox5_1_1_data_value.htm" class="topiclink">DataValue</a>).</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The source timestamp reflects the time when the value and/or statue has recently changed. It shall be generated as close to the source as possible.</span><br />
<span class="f_Paragraph">In most cases it does not make sense to write a source timestamp by a client, except the client represents the source of the data.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The server timestamp reflects the time when the server receives a value and/or status. In almost no cases it makes sense to allow writing of the server timestamp by a client.</span><br />
<span class="f_Paragraph">The server timestamp is also used within the SDK to decide </span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">whether the cached value in a node is new enough for a read request (using maxAge).</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">whether a value shall be reported on a monitored item</span></td></tr></table></div><p class="p_Paragraph"><span class="f_Paragraph">If a server application allows writing of a server timestamp unexpected behavior can be detected.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">This will not be shown in the tutorial.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">&nbsp;</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">See also: <a href="html_customhandlingofreadrequests.htm" class="topiclink">Custom Handling of Read Requests</a>, <a href="html_serverstep3sample.htm" class="topiclink">Sample Application</a>, <a href="html_servertutorial.htm" class="topiclink">Server Tutorial</a></span></p>

      </td>
  </tr>
  <tr>
    <td colspan="2" style="padding-top: 0px;">
         <p>
            <hr />
            <a href="mailto:support.automation@softing.com?subject=OPC UA C++ Server &amp; Client SDK V6.00 Documentation Feedback:Page=html_customhandlingofwriterequests.htm">Send comments on this topic.</a>
         </p>
         <p>
            Copyright © Softing Industrial Automation GmbH&nbsp;2022
         </p>
    </td>
  </tr>
</table>
</body>
</html>
