<!DOCTYPE HTML>
<html>
<head>
   <title>Get NodeIds by Browse Paths</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "html_getnodeidsbybrowsenames.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">

<table width="100%" border="0" cellspacing="0" cellpadding="10">
  <tr valign="middle" bgcolor="#99CCFF">
    <td>
      <p>
        <table width="100%" border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td style="vertical-align:middle;">
              <p style="font-family:Verdana; font-size:9pt; font-style:italic;">OPC UA C++ Server &amp; Client SDK V6.00</p>
              <p style="font-family:Verdana; font-size:9pt; font-weight:bold;">Get NodeIds by Browse Paths</p>
            </td>
          </tr>
        </table>
      </p>
    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="html_welcome.htm">Top</a>&nbsp;
     <a href="html_getnodeidswithnamespacetable.htm">Previous</a>&nbsp;
     <a href="html_clientstep5sample.htm">Next</a>
     </span>
    </td>
  </tr>
  <tr bgcolor="white">
      <td colspan="2">
          <p class="p_Paragraph"><span class="f_Paragraph">The </span><span class="f_Reference">TranslateBrowsePathToNodeIds</span><span class="f_Paragraph"> service is useful when a client has the NodeId of an object or variable and it knows the type definition of the node. In this case, the client can ask the server to translate browse paths found on the type to NodeIds found in the instance. A browse path consists of a starting node and a list of browse names that are linked by references.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">For example, by knowing the </span><span class="f_Reference">RefrigeratorType</span><span class="f_Paragraph"> the client can ask the server for the NodeId of the </span><span class="f_Reference">Temperature </span><span class="f_Paragraph">variable found in </span><span class="f_Reference">Refrigerator1</span><span class="f_Paragraph">. </span></p>
<p class="p_Paragraph"><span class="f_Heading3">Preconditions</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Before the </span><span class="f_Reference">TranslateBrowsePathToNodeIds</span><span class="f_Paragraph"> service can be invoked, the <a href="class_softing_o_p_c_toolbox5_1_1_application.htm" class="topiclink">Application</a> must be initialized and a connected <a href="class_softing_o_p_c_toolbox5_1_1_client_1_1_session.htm" class="topiclink">Session</a> must be available (see <a href="html_clientstep1.htm" class="topiclink">Client Tutorial Step 1</a>).</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">Calling the TranslateBrowsePathToNodeIds Service</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">The following steps are necessary to use the service.</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:18px"><span style="font-size:9pt; font-family: 'Verdana';color:#000000;">1.</span></td><td style="border:none"><span class="f_List">Create and configure the <a href="class_softing_o_p_c_toolbox5_1_1_browse_path.htm" class="topiclink">BrowsePath</a>. It consists of a <a href="class_softing_o_p_c_toolbox5_1_1_node_id.htm" class="topiclink">NodeId</a> and a <a href="class_softing_o_p_c_toolbox5_1_1_relative_path.htm" class="topiclink">RelativePath</a>. The </span><a href="class_softing_o_p_c_toolbox5_1_1_relative_path.htm" class="topiclink">RelativePath</a> itself consist of<span class="f_List"> <a href="class_softing_o_p_c_toolbox5_1_1_relative_path_element.htm" class="topiclink">RelativePathElements</a>. Each element specifies a </span><span class="f_Reference">browse name</span><span class="f_List"> and a </span><span class="f_Reference">reference</span><span class="f_List">.</span></td></tr></table></div><p class="p_CodeExample"><span class="f_CodeExample">std::vector&lt;BrowsePath&gt;&nbsp;allBrowsePaths;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">BrowsePath&nbsp;currentBrowsePath;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">RelativePath&nbsp;currentRelativePath;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">RelativePathElement&nbsp;currentElement;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">currentBrowsePath.setStartingNode(startingNodeId);&nbsp;//&nbsp;e.g.&nbsp;NodeId&nbsp;of&nbsp;a&nbsp;(custom)&nbsp;type</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">currentElement.setReferenceTypeId(Statics::ReferenceTypeId_HasComponent);</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">currentElement.setIncludeSubtypes(false);&nbsp;&nbsp;&nbsp;//&nbsp;use&nbsp;the&nbsp;exact&nbsp;reference&nbsp;type</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">currentElement.setIsInverse(false);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;use&nbsp;forward&nbsp;references</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">currentElement.setTargetName(browseName);</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">currentRelativePath.addElement(currentElement);</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">...&nbsp;&nbsp;&nbsp;//&nbsp;add&nbsp;more&nbsp;BrowsePathElements&nbsp;for&nbsp;a&nbsp;longer&nbsp;relative&nbsp;path</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">currentBrowsePath.setRelativePath(currentRelativePath);</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">allBrowsePaths.push_back(currentBrowsePath);</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">...&nbsp;&nbsp;&nbsp;//&nbsp;add&nbsp;more&nbsp;BrowsePaths&nbsp;for&nbsp;more&nbsp;desired&nbsp;Nodes</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:18px"><span style="font-size:9pt; font-family: 'Verdana';color:#000000;">2.</span></td><td style="border:none"><span class="f_Paragraph">Call the TranslateBrowsePathToNodeIds service.</span></td></tr></table></div><p class="p_CodeExample"><span class="f_CodeExample">std::vector&lt;BrowsePathResult&gt;&nbsp;browsePathResults;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">session-&gt;translateBrowsePathToNodeIds(allBrowsePaths,&nbsp;browsePathResults);</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:18px"><span style="font-size:9pt; font-family: 'Verdana';color:#000000;">3.</span></td><td style="border:none"><span class="f_Paragraph">Consume the results. The <a href="class_softing_o_p_c_toolbox5_1_1_browse_path_result.htm" class="topiclink">BrowsePathResult</a> contains the encountered nodes as </span><a href="class_softing_o_p_c_toolbox5_1_1_browse_path_target.htm" class="topiclink">BrowsePathTargets</a>.</td></tr></table></div><p class="p_CodeExample"><span class="f_CodeExample">std::vector&lt;NodeId&gt;&nbsp;resultNodes;</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">//&nbsp;handle&nbsp;the&nbsp;browsePathResults</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">for&nbsp;(unsigned&nbsp;int&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;browsePathResults.size();&nbsp;i++)</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">{</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;if&nbsp;(StatusCode::isGood(browsePathResults[i].getStatusCode()))</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;{</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;(unsigned&nbsp;int&nbsp;j&nbsp;=&nbsp;0;&nbsp;j&nbsp;&lt;&nbsp;browsePathResults[i].getTargetCount();&nbsp;j++)</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resultNodes-&gt;push_back(browsePathResults[i].getTarget(j)-&gt;getTargetId());</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">&nbsp;&nbsp;&nbsp;}</span></p>
<p class="p_CodeExample"><span class="f_CodeExample">}</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">&nbsp;</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">Note:</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">Please note that browse names are only guaranteed to be unique within a type definition. A server may expose two nodes with the same browse name that are referenced by another node. Thus it is possible to receive more than one node as result of a TranslateBrowsePathsToNodeIds call.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">&nbsp;</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">See also: <a href="html_getnodeidswithnamespacetable.htm" class="topiclink">Get NodeIds Using the Namespace Table</a>, <a href="html_clientstep5sample.htm" class="topiclink">Sample Application</a>, <a href="html_browse.htm" class="topiclink">Browsing the Address Space</a>, <a href="html_clienttutorial.htm" class="topiclink">Client Tutorial</a></span></p>

      </td>
  </tr>
  <tr>
    <td colspan="2" style="padding-top: 0px;">
         <p>
            <hr />
            <a href="mailto:support.automation@softing.com?subject=OPC UA C++ Server &amp; Client SDK V6.00 Documentation Feedback:Page=html_getnodeidsbybrowsenames.htm">Send comments on this topic.</a>
         </p>
         <p>
            Copyright © Softing Industrial Automation GmbH&nbsp;2022
         </p>
    </td>
  </tr>
</table>
</body>
</html>
