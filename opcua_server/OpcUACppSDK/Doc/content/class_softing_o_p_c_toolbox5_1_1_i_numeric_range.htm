<!DOCTYPE HTML>
<html>
<head>
   <title>INumericRange Class Reference</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">

<table width="100%" border="0" cellspacing="0" cellpadding="10">
  <tr valign="middle" bgcolor="#99CCFF">
    <td>
      <p>
        <table width="100%" border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td style="vertical-align:middle;">
              <p style="font-family:Verdana; font-size:9pt; font-style:italic;">OPC UA C++ Server &amp; Client SDK V6.00</p>
              <p style="font-family:Verdana; font-size:9pt; font-weight:bold;">INumericRange Class Reference</p>
            </td>
          </tr>
        </table>
      </p>
    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="html_welcome.htm">Top</a>&nbsp;
     <a href="class_softing_o_p_c_toolbox5_1_1_i_node_type_description.htm">Previous</a>&nbsp;
     <a href="class_softing_o_p_c_toolbox5_1_1_i_parsing_result.htm">Next</a>
     </span>
    </td>
  </tr>
  <tr bgcolor="white">
      <td colspan="2">
          <p style="margin: 0px 0px 0px 0px;"><a id="class_softing_o_p_c_toolbox5_1_1_i_numeric_range"></a></p>
<p><span class="f_CodeExample">#include &quot;INumericRange.h&quot;</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: Arial; color: #000000;">&nbsp;</span></p>
<p><map name="map279" id="map279"><area shape="rect" coords="5,6,115,29" href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm" alt="" /><area shape="rect" coords="7,59,113,82" href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm" alt="" /></map><img src="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.gif" width="120" height="88" alt="class_softing_o_p_c_toolbox5_1_1_i_numeric_range" style="width:120px;height:88px;border:none" usemap="#map279" /></p>
<p class="p_Paragraph">The <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range" class="topiclink">NumericRange</a> data type is used to define a range of elements in an array, a matrix, a <a href="class_softing_o_p_c_toolbox5_1_1_byte_string.htm#class_softing_o_p_c_toolbox5_1_1_byte_string" class="topiclink">ByteString</a>, or a string.</p>
<p class="p_Paragraph">A <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range" class="topiclink">NumericRange</a> is a list of integer pairs &lt;k_1, k_2&gt; whereas k_1 describes the lower and k_2 the higher bound of the range. In order to describe a 2x2 matrix within a 4x4 matrix using a <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range" class="topiclink">NumericRange</a> one would use the pair list (&lt;0, 1&gt;, &lt;0, 1&gt;) for the upper left 2x2 matrix.</p>
<p class="p_Paragraph"><span class="f_Heading3">Note:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p>The <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range" class="topiclink">NumericRange</a> data type is actually transmitted as string across the wire. Therefore, the getParseResult() method must be used to verify that any <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range" class="topiclink">NumericRange</a> received by a client or server has been successfully parsed. </p>
</td>
</tr>
</table>
</div>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="ListOfMembers" style="width:100%; border:none; border-spacing:3px;">
<tr style="text-align:left;vertical-align:top;">
<td colspan="2" style="vertical-align:top; padding:0px;"><h2 class="p_Heading2"><span class="f_Heading2">Public Member Functions</span></h2>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual </p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1aff556e636e6bc37d25524d6f186503e3" class="topiclink">~INumericRange</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual OTUInt32</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a2eada0eb62019bfd47672d9a47c54073" class="topiclink">getDimensions</a></span>() const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual std::vector&lt; std::pair&lt; OTUInt32, OTUInt32 &gt; &gt;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a88a2cb7a3010d46591dea754985fffe0" class="topiclink">getRanges</a></span>() const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a15741dd7398487fc5e9d5e20033a6f54" class="topiclink">addRange</a></span>(OTUInt32 lowerBound, OTUInt32 upperBound)=0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a312f368a375b1117cbd7aa41e225034d" class="topiclink">addRange</a></span>(const std::pair&lt; OTUInt32, OTUInt32 &gt; &amp;range)=0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual void</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a8f4713df1aa3f74e8e88e3f7044ddb6b" class="topiclink">reserve</a></span>(OTUInt32 n)=0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a16b94174aba9d2b6040174d7dd1190a5" class="topiclink">parse</a></span>(const tstring &amp;numericRangeString)=0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual tstring</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1aa0a1491df68f95ab428d04fb15ad114f" class="topiclink">toString</a></span>() const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a4d6628645885ccff634dc8b7cbdf5eb6" class="topiclink">set</a></span>(const INumericRange *cp)=0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1af49be145a388e1f6cab8fba8f15e45f2" class="topiclink">set</a></span>(const INumericRange &amp;cp)=0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual int</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1ae1533e3da5e8d0398b8ff6ebe16d2955" class="topiclink">compare</a></span>(const INumericRange *other) const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual int</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1ad687e2f769feeac2f550704856217692" class="topiclink">compare</a></span>(const INumericRange &amp;other) const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual bool</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1abac947671bd0e7ad48ffe316789dfd7f" class="topiclink">operator==</a></span>(const INumericRange &amp;other) const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual bool</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a47a9e4ba2c4174c09883810723784f30" class="topiclink">operator!=</a></span>(const INumericRange &amp;other) const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual void *</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1aa0b804b144882ab3a6ad1db6ca105966" class="topiclink">getInternHandle</a></span>() const =0</p>
</td>
</tr>
</table>
</div>
<hr style="height:2px; color:#000000; border-width:0px; background-color:#000000;" /><p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1aff556e636e6bc37d25524d6f186503e3"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <span style="font-weight: bold;">SoftingOPCToolbox5::INumericRange::~INumericRange</span>()<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Destructor </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a2eada0eb62019bfd47672d9a47c54073"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual OTUInt32<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::INumericRange::getDimensions</span>() const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns the number of ranges (i.e. the number of dimensions). This method is provided for convenience and returns the same result as getRange().size().</p>
<p class="p_Paragraph"><span class="f_Heading3">See also:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a88a2cb7a3010d46591dea754985fffe0" class="topiclink">getRanges()</a> </p>
</td>
</tr>
</table>
</div>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range_1a7aefcc0a6750e7ce8033c38a20825e03" class="topiclink">SoftingOPCToolbox5::NumericRange</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a88a2cb7a3010d46591dea754985fffe0"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual std::vector&lt; std::pair&lt; OTUInt32, OTUInt32 &gt; &gt;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::INumericRange::getRanges</span>() const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns the range pairs for all dimensions. Each returned pair denotes the range defined for one dimension. </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range_1a7d6df4635236e55aba1a374f72406d8b" class="topiclink">SoftingOPCToolbox5::NumericRange</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a15741dd7398487fc5e9d5e20033a6f54"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::INumericRange::addRange</span>(OTUInt32 <span class="f_Parameter">lowerBound</span>, OTUInt32 <span class="f_Parameter">upperBound</span>)<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Adds a range pair for one dimension.</p>
<p class="p_Paragraph">A range spanning only one element (e.g. 5) is defined by providing the element index both as lower and upper bound (e.g. lower bound = 5, upper bound = 5). If a range is spanning two or more elements, the lower bound must always be less than the upper bound.</p>
<p class="p_Paragraph"><span class="f_Heading3">Parameters:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p style="margin: 5px 5px 0px 0px;"><span class="f_Parameter">lowerBound</span></p>
</td>
<td style="vertical-align:top; padding:2px;"><p class="p_Paragraph">The lower bound of the range to add </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p style="margin: 5px 5px 0px 0px;"><span class="f_Parameter">upperBound</span></p>
</td>
<td style="vertical-align:top; padding:2px;"><p class="p_Paragraph">The upper bound of the range to add </p>
</td>
</tr>
</table>
</div>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range_1a358777cbc359e0bd944a7dedfc810890" class="topiclink">SoftingOPCToolbox5::NumericRange</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a312f368a375b1117cbd7aa41e225034d"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::INumericRange::addRange</span>(const std::pair&lt; OTUInt32, OTUInt32 &gt; &amp; <span class="f_Parameter">range</span>)<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Adds a range pair for one dimension. </p>
<p class="p_Paragraph"><span class="f_Heading3">Parameters:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p style="margin: 5px 5px 0px 0px;"><span class="f_Parameter">range</span></p>
</td>
<td style="vertical-align:top; padding:2px;"><p class="p_Paragraph">The range pair whereas the first element denotes the lower and the second element the upper bound.</p>
</td>
</tr>
</table>
</div>
<h3 class="p_Heading3"><span class="f_Heading3">See also:</span></h3>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a15741dd7398487fc5e9d5e20033a6f54" class="topiclink">addRange(OTUInt32, OTUInt32)</a> </p>
</td>
</tr>
</table>
</div>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range_1a6443b4cdd49a75e66d8febe1c9c15a15" class="topiclink">SoftingOPCToolbox5::NumericRange</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a8f4713df1aa3f74e8e88e3f7044ddb6b"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual void<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::INumericRange::reserve</span>(OTUInt32 <span class="f_Parameter">n</span>)<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Reserves memory for the given number of (lower bound, upper bound)-pairs</p>
<p class="p_Paragraph"><span class="f_Heading3">Parameters:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p style="margin: 5px 5px 0px 0px;"><span class="f_Parameter">n</span></p>
</td>
<td style="vertical-align:top; padding:2px;"><p class="p_Paragraph">The number of range pairs for which memory will be reserved </p>
</td>
</tr>
</table>
</div>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range_1a411a593a522faa779d543f7fdaaeafaa" class="topiclink">SoftingOPCToolbox5::NumericRange</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a16b94174aba9d2b6040174d7dd1190a5"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::INumericRange::parse</span>(const tstring &amp; <span class="f_Parameter">numericRangeString</span>)<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Sets the numeric range from a range string</p>
<p class="p_Paragraph"><span class="f_Heading3">Parameters:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p style="margin: 5px 5px 0px 0px;"><span class="f_Parameter">numericRangeString</span></p>
</td>
<td style="vertical-align:top; padding:2px;"><p class="p_Paragraph">The string representation of a numeric range.</p>
</td>
</tr>
</table>
</div>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">&quot;2&quot; for a one dimensional range containing the 2nd element </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">&quot;2:4&quot; for a one dimensional range containing the 2nd, 3rd and 4th element </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">&quot;2:3,0:1&quot; for a two dimensional range containing the 2nd and 3rd element of the first dimension, the 0th and first element of the second dimension </td></tr></table></div></td>
</tr>
</table>
</div>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range_1a5fe7aaf443e3b8d474c3dd80c7258506" class="topiclink">SoftingOPCToolbox5::NumericRange</a>.</p>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1aa0a1491df68f95ab428d04fb15ad114f"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual tstring<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::INumericRange::toString</span>() const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns a string representation of the <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range" class="topiclink">NumericRange</a>. The string representation conforms to the representation of the <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range" class="topiclink">NumericRange</a> that is found on the wire. </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range_1ac2fe9328bc47edd677c7a16af5873e39" class="topiclink">SoftingOPCToolbox5::NumericRange</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a4d6628645885ccff634dc8b7cbdf5eb6"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::INumericRange::set</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range" class="topiclink">INumericRange</a> * <span class="f_Parameter">cp</span>)<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Copies the content of <span class="f_Parameter">cp</span> to this instance </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range_1a079cf59196229acdd63c5cf80ace5d3f" class="topiclink">SoftingOPCToolbox5::NumericRange</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1af49be145a388e1f6cab8fba8f15e45f2"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::INumericRange::set</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range" class="topiclink">INumericRange</a> &amp; <span class="f_Parameter">cp</span>)<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range_1a655911db87486ef2f5d7b02ca5a96f48" class="topiclink">SoftingOPCToolbox5::NumericRange</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1ae1533e3da5e8d0398b8ff6ebe16d2955"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual int<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::INumericRange::compare</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range" class="topiclink">INumericRange</a> * <span class="f_Parameter">other</span>) const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Compares this instance to the given <span class="f_Parameter">other</span> instance.</p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">Returns &lt;0, if &quot;this &lt; other&quot; </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">Returns 0, if &quot;this == other&quot; </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">Returns &gt;0, if &quot;this &gt; other&quot; </td></tr></table></div></td>
</tr>
</table>
</div>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range_1a7afaee1ceb883902c8cca37622f1ee27" class="topiclink">SoftingOPCToolbox5::NumericRange</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1ad687e2f769feeac2f550704856217692"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual int<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::INumericRange::compare</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range" class="topiclink">INumericRange</a> &amp; <span class="f_Parameter">other</span>) const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range_1a4db4b394b4f5a4218a0d134f39833cbd" class="topiclink">SoftingOPCToolbox5::NumericRange</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1abac947671bd0e7ad48ffe316789dfd7f"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual bool<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::INumericRange::operator==</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range" class="topiclink">INumericRange</a> &amp; <span class="f_Parameter">other</span>) const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Compares two instances for equality </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range_1a06429a7dd76e42a0fa51af11b172d90d" class="topiclink">SoftingOPCToolbox5::NumericRange</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1a47a9e4ba2c4174c09883810723784f30"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual bool<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::INumericRange::operator!=</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_i_numeric_range" class="topiclink">INumericRange</a> &amp; <span class="f_Parameter">other</span>) const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Compares two instances for inequality </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range_1a3ac2c367603859a845e97409835e430d" class="topiclink">SoftingOPCToolbox5::NumericRange</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_numeric_range_1aa0b804b144882ab3a6ad1db6ca105966"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual void *<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::INumericRange::getInternHandle</span>() const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">For internal use only </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_numeric_range.htm#class_softing_o_p_c_toolbox5_1_1_numeric_range_1ab9ec9b5e16f7e3555d441192fdbb4ced" class="topiclink">SoftingOPCToolbox5::NumericRange</a>.</p>
</td>
</tr>
</table>
</div>

      </td>
  </tr>
  <tr>
    <td colspan="2" style="padding-top: 0px;">
         <p>
            <hr />
            <a href="mailto:support.automation@softing.com?subject=OPC UA C++ Server &amp; Client SDK V6.00 Documentation Feedback:Page=class_softing_o_p_c_toolbox5_1_1_i_numeric_range.htm">Send comments on this topic.</a>
         </p>
         <p>
            Copyright © Softing Industrial Automation GmbH&nbsp;2022
         </p>
    </td>
  </tr>
</table>
</body>
</html>
