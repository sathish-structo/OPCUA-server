<!DOCTYPE HTML>
<html>
<head>
   <title>LiteralOperand Class Reference</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "class_softing_o_p_c_toolbox5_1_1_literal_operand.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">

<table width="100%" border="0" cellspacing="0" cellpadding="10">
  <tr valign="middle" bgcolor="#99CCFF">
    <td>
      <p>
        <table width="100%" border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td style="vertical-align:middle;">
              <p style="font-family:Verdana; font-size:9pt; font-style:italic;">OPC UA C++ Server &amp; Client SDK V6.00</p>
              <p style="font-family:Verdana; font-size:9pt; font-weight:bold;">LiteralOperand Class Reference</p>
            </td>
          </tr>
        </table>
      </p>
    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="html_welcome.htm">Top</a>&nbsp;
     <a href="class_softing_o_p_c_toolbox5_1_1_key_value_pair.htm">Previous</a>&nbsp;
     <a href="class_softing_o_p_c_toolbox5_1_1_localized_text.htm">Next</a>
     </span>
    </td>
  </tr>
  <tr bgcolor="white">
      <td colspan="2">
          <p style="margin: 0px 0px 0px 0px;"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand"></a></p>
<p><span class="f_CodeExample">#include &quot;LiteralOperand.h&quot;</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: Arial; color: #000000;">&nbsp;</span></p>
<p><map name="map325" id="map325"><area shape="rect" coords="7,59,113,82" href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm" alt="" /><area shape="rect" coords="5,6,115,29" href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm" alt="" /></map><img src="class_softing_o_p_c_toolbox5_1_1_literal_operand.gif" width="120" height="88" alt="class_softing_o_p_c_toolbox5_1_1_literal_operand" style="width:120px;height:88px;border:none" usemap="#map325" /></p>
<p class="p_Paragraph">The <a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand" class="topiclink">LiteralOperand</a> data type is used as operand in event and query filters to specify a literal value (such as an integer or a <a href="class_softing_o_p_c_toolbox5_1_1_node_id.htm#class_softing_o_p_c_toolbox5_1_1_node_id" class="topiclink">NodeId</a>).</p>
<p class="p_Paragraph"><span class="f_Heading3">See also:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_i_content_filter.htm#class_softing_o_p_c_toolbox5_1_1_i_content_filter" class="topiclink">IContentFilter</a> </p>
</td>
</tr>
</table>
</div>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="ListOfMembers" style="width:100%; border:none; border-spacing:3px;">
<tr style="text-align:left;vertical-align:top;">
<td colspan="2" style="vertical-align:top; padding:0px;"><h2 class="p_Heading2"><span class="f_Heading2">Public Member Functions</span></h2>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">&nbsp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1acca9eb8c366b119cde0f5e90f4ed3a70" class="topiclink">LiteralOperand</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">&nbsp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1aef8e44e73292108ba0efd4927a1e12cd" class="topiclink">LiteralOperand</a></span>(const ILiteralOperand *)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">&nbsp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1a9309759736e335212360a4ad72d91cbf" class="topiclink">LiteralOperand</a></span>(const ILiteralOperand &amp;)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">&nbsp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1a8e6196fc9540f7b32b5c69d6a089278d" class="topiclink">LiteralOperand</a></span>(const LiteralOperand &amp;)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">&nbsp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1a82a4f98d3757ef1106efb3d6a22e9a46" class="topiclink">LiteralOperand</a></span>(const IValue *value)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">&nbsp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1acae6c57613ff427c8d20588e769155c7" class="topiclink">LiteralOperand</a></span>(const Value &amp;value)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual </p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1a5e6c8726e207fec4978a137baf8e97cc" class="topiclink">~LiteralOperand</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand" class="topiclink">LiteralOperand</a> &amp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1a47e0a8e48a4e5e76423014cd269c3a61" class="topiclink">operator=</a></span>(const ILiteralOperand *cp)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand" class="topiclink">LiteralOperand</a> &amp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1abfa45ce094e459cce7d34544bc8601ea" class="topiclink">operator=</a></span>(const ILiteralOperand &amp;cp)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand" class="topiclink">LiteralOperand</a> &amp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1a9569b8a95702cfecbeaaa17b9ec4b8cd" class="topiclink">operator=</a></span>(const LiteralOperand &amp;cp)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1a8503db253794113c414da14d6fb7169b" class="topiclink">set</a></span>(const ILiteralOperand *pSrc)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1a2154ac0ce8229375754481bc43197b75" class="topiclink">set</a></span>(const ILiteralOperand &amp;pSrc)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual int</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1a944f8128b8df1664cd7764a90815aa75" class="topiclink">compare</a></span>(const ILiteralOperand *) const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual int</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1a892bcf8e1ae153fc27c463a63b9e2d97" class="topiclink">compare</a></span>(const ILiteralOperand &amp;) const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual bool</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1ad5466f4a09de6ea8031ae231f5618024" class="topiclink">operator==</a></span>(const ILiteralOperand &amp;other) const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual bool</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1a77f4e23ff5530ecff9c0d3cc88786ce8" class="topiclink">operator!=</a></span>(const ILiteralOperand &amp;other) const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual const <a href="class_softing_o_p_c_toolbox5_1_1_i_value.htm#class_softing_o_p_c_toolbox5_1_1_i_value" class="topiclink">IValue</a> *</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1aecfc4fe70e803d9116a9749ddf0419db" class="topiclink">getValue</a></span>() const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="class_softing_o_p_c_toolbox5_1_1_i_value.htm#class_softing_o_p_c_toolbox5_1_1_i_value" class="topiclink">IValue</a> *</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1aef9b918b28bb2babe1dcde8fc049c5ec" class="topiclink">getValue</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual void</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1af813889c045ee9623b74c91d5428edfc" class="topiclink">setValue</a></span>(const IValue *value)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual void</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1a9cd4206b3a9d179bd36c3d8a78128893" class="topiclink">setValue</a></span>(const Value &amp;value)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual void *</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1a5c190882612e62f820188730b7d702e5" class="topiclink">getInternHandle</a></span>() const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">void</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand_1aa9d6b97648c8dc0475a4ffd263a6f68d" class="topiclink">clear</a></span>()</p>
</td>
</tr>
</table>
</div>
<hr style="height:2px; color:#000000; border-width:0px; background-color:#000000;" /><p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1acca9eb8c366b119cde0f5e90f4ed3a70"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::LiteralOperand</span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Default constructor </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1aef8e44e73292108ba0efd4927a1e12cd"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::LiteralOperand</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand" class="topiclink">ILiteralOperand</a> * <span class="f_Parameter"> </span>)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Constructs a copy of the given instance </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1a9309759736e335212360a4ad72d91cbf"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::LiteralOperand</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand" class="topiclink">ILiteralOperand</a> &amp; <span class="f_Parameter"> </span>)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1a8e6196fc9540f7b32b5c69d6a089278d"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::LiteralOperand</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand" class="topiclink">LiteralOperand</a> &amp; <span class="f_Parameter"> </span>)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1a82a4f98d3757ef1106efb3d6a22e9a46"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::LiteralOperand</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_value.htm#class_softing_o_p_c_toolbox5_1_1_i_value" class="topiclink">IValue</a> * <span class="f_Parameter">value</span>)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1acae6c57613ff427c8d20588e769155c7"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::LiteralOperand</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_value.htm#class_softing_o_p_c_toolbox5_1_1_value" class="topiclink">Value</a> &amp; <span class="f_Parameter">value</span>)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1a5e6c8726e207fec4978a137baf8e97cc"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::~LiteralOperand</span>()<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Destructor </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1a47e0a8e48a4e5e76423014cd269c3a61"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand" class="topiclink">LiteralOperand</a> &amp;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::operator=</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand" class="topiclink">ILiteralOperand</a> * <span class="f_Parameter">cp</span>)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Assigns the contents of <span class="f_Parameter">cp</span> to this instance </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1abfa45ce094e459cce7d34544bc8601ea"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand" class="topiclink">LiteralOperand</a> &amp;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::operator=</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand" class="topiclink">ILiteralOperand</a> &amp; <span class="f_Parameter">cp</span>)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1a9569b8a95702cfecbeaaa17b9ec4b8cd"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand" class="topiclink">LiteralOperand</a> &amp;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::operator=</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_literal_operand" class="topiclink">LiteralOperand</a> &amp; <span class="f_Parameter">cp</span>)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1a8503db253794113c414da14d6fb7169b"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::set</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand" class="topiclink">ILiteralOperand</a> * <span class="f_Parameter">cp</span>)<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Copies the content of <span class="f_Parameter">cp</span> to this instance </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand_1a5b4583f86b7f11ea771b2f4b05391c46" class="topiclink">SoftingOPCToolbox5::ILiteralOperand</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1a2154ac0ce8229375754481bc43197b75"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::set</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand" class="topiclink">ILiteralOperand</a> &amp; <span class="f_Parameter">pSrc</span>)<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand_1a1255e458c95c6588db5d64be2fbc8fe8" class="topiclink">SoftingOPCToolbox5::ILiteralOperand</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1a944f8128b8df1664cd7764a90815aa75"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual int<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::compare</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand" class="topiclink">ILiteralOperand</a> * <span class="f_Parameter">other</span>) const<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Compares this instance to the given <span class="f_Parameter">other</span> instance.</p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">Returns &lt;0, if &quot;this &lt; other&quot; </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">Returns 0, if &quot;this == other&quot; </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">Returns &gt;0, if &quot;this &gt; other&quot; </td></tr></table></div></td>
</tr>
</table>
</div>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand_1acfbfcc7f629ed8056b5a1d9590739a15" class="topiclink">SoftingOPCToolbox5::ILiteralOperand</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1a892bcf8e1ae153fc27c463a63b9e2d97"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual int<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::compare</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand" class="topiclink">ILiteralOperand</a> &amp; <span class="f_Parameter"> </span>) const<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand_1aa3289b4ed42472981185cd6954e51815" class="topiclink">SoftingOPCToolbox5::ILiteralOperand</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1ad5466f4a09de6ea8031ae231f5618024"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual bool<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::operator==</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand" class="topiclink">ILiteralOperand</a> &amp; <span class="f_Parameter">other</span>) const<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Compares two instances for equality </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand_1a19a7746ffb637748271933873589092f" class="topiclink">SoftingOPCToolbox5::ILiteralOperand</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1a77f4e23ff5530ecff9c0d3cc88786ce8"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual bool<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::operator!=</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand" class="topiclink">ILiteralOperand</a> &amp; <span class="f_Parameter">other</span>) const<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Compares two instances for inequality </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand_1aed83a31978a1cb32f40249a36bc10c3a" class="topiclink">SoftingOPCToolbox5::ILiteralOperand</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1aecfc4fe70e803d9116a9749ddf0419db"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual const <a href="class_softing_o_p_c_toolbox5_1_1_i_value.htm#class_softing_o_p_c_toolbox5_1_1_i_value" class="topiclink">IValue</a> *<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::getValue</span>() const<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns the literal value. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand_1a3407927191b7bcddf6cf4cb9afac95dc" class="topiclink">SoftingOPCToolbox5::ILiteralOperand</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1aef9b918b28bb2babe1dcde8fc049c5ec"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="class_softing_o_p_c_toolbox5_1_1_i_value.htm#class_softing_o_p_c_toolbox5_1_1_i_value" class="topiclink">IValue</a> *<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::getValue</span>()<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand_1ac7ad5ef3c5941da5e6d67f27186eb923" class="topiclink">SoftingOPCToolbox5::ILiteralOperand</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1af813889c045ee9623b74c91d5428edfc"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual void<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::setValue</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_value.htm#class_softing_o_p_c_toolbox5_1_1_i_value" class="topiclink">IValue</a> * <span class="f_Parameter">value</span>)<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Sets the literal value. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand_1a75f47e5027027e1eaeafa6fbc116ae9f" class="topiclink">SoftingOPCToolbox5::ILiteralOperand</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1a9cd4206b3a9d179bd36c3d8a78128893"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual void<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::setValue</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_value.htm#class_softing_o_p_c_toolbox5_1_1_value" class="topiclink">Value</a> &amp; <span class="f_Parameter">value</span>)<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand_1a37d83ab4fd90e5e13dc66989bf4fb263" class="topiclink">SoftingOPCToolbox5::ILiteralOperand</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1a5c190882612e62f820188730b7d702e5"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual void *<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::getInternHandle</span>() const<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">For internal use only </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_literal_operand.htm#class_softing_o_p_c_toolbox5_1_1_i_literal_operand_1ab5ace74cfbc1359ac4bba15f1ef3bfc7" class="topiclink">SoftingOPCToolbox5::ILiteralOperand</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_literal_operand_1aa9d6b97648c8dc0475a4ffd263a6f68d"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>void<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::LiteralOperand::clear</span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Clears the contents of this object to enable its re-use. </p>
</td>
</tr>
</table>
</div>

      </td>
  </tr>
  <tr>
    <td colspan="2" style="padding-top: 0px;">
         <p>
            <hr />
            <a href="mailto:support.automation@softing.com?subject=OPC UA C++ Server &amp; Client SDK V6.00 Documentation Feedback:Page=class_softing_o_p_c_toolbox5_1_1_literal_operand.htm">Send comments on this topic.</a>
         </p>
         <p>
            Copyright © Softing Industrial Automation GmbH&nbsp;2022
         </p>
    </td>
  </tr>
</table>
</body>
</html>
