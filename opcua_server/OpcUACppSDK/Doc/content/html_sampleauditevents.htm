<!DOCTYPE HTML>
<html>
<head>
   <title>Audit Events</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "html_sampleauditevents.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">

<table width="100%" border="0" cellspacing="0" cellpadding="10">
  <tr valign="middle" bgcolor="#99CCFF">
    <td>
      <p>
        <table width="100%" border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td style="vertical-align:middle;">
              <p style="font-family:Verdana; font-size:9pt; font-style:italic;">OPC UA C++ Server &amp; Client SDK V6.00</p>
              <p style="font-family:Verdana; font-size:9pt; font-weight:bold;">Audit Events</p>
            </td>
          </tr>
        </table>
      </p>
    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="html_welcome.htm">Top</a>&nbsp;
     <a href="html_sampleasynchronousaccess.htm">Previous</a>&nbsp;
     <a href="html_xmlimport.htm">Next</a>
     </span>
    </td>
  </tr>
  <tr bgcolor="white">
      <td colspan="2">
          <p class="p_Paragraph"><a id="hdr"></a><span class="f_Paragraph">OPC UA C++ Server &amp; Client SDK V6.00 provides support for the events specified by OPC Foundation.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Almost all audit events can be enabled or disabled by calling the function <a href="class_softing_o_p_c_toolbox5_1_1_application.htm#class_softing_o_p_c_toolbox5_1_1_application_1a9dff47ef61406fd8679faa464063bf4d" class="topiclink">setEnableAuditEvents</a> of the <a href="class_softing_o_p_c_toolbox5_1_1_application.htm" class="topiclink">Application</a> instance.</span><br />
<span class="f_Paragraph">The only audit event which always needs implementation in the application is the <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_audit_write_update_event.htm" class="topiclink">AuditWriteUpdateEvent</a> which needs information not available to the SDK.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">This sample shows how specific audit events can be enabled while others stay disabled.</span><br />
<span class="f_Paragraph">Also the implementation of the write update audit event is demonstrated.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">To report specific audit events the general reporting must be disabled.</span><br />
<span class="f_Paragraph">The methods where the desired events are thrown must be overwritten by copying the default implementation of the base class.</span><br />
<span class="f_Paragraph">The check whether audit event reporting is enabled must be removed.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">On the client side two sessions are created: one for auditing and other for triggering events. In the first session we subscribe a monitored item to the server node and in the second one to the sample variable. To get the expected event data, the event filter must be configured properly for the monitored item auditing events. This is done by calling the function <a href="class_softing_o_p_c_toolbox5_1_1_client_1_1_monitored_item.htm#class_softing_o_p_c_toolbox5_1_1_client_1_1_monitored_item_1a7f31edacdb30b295e890e070d9e5a586" class="topiclink">setEventFilter()</a> of class <a href="class_softing_o_p_c_toolbox5_1_1_client_1_1_monitored_item.htm" class="topiclink">Client::MonitoredItem</a>.</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">Where to Find</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">The projects for this sample are located in the directory: &quot;</span><span class="f_FixedSize">&lt;InstallDir&gt;/Apps/Samples/Cpp/AuditEvent</span><span class="f_Paragraph">&quot;. While the subdirectory &quot;</span><span class="f_FixedSize">ServerReportingAuditEvents</span><span class="f_Paragraph">&quot; contains source for the server, the client project for test is located in &quot;</span><span class="f_FixedSize">TestAuditEvents</span><span class="f_Paragraph">&quot; subdirectory.</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">Running the Sample</span></h3>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">The client and server need an existing application instance certificate and it must be in the correct directory. See <a href="html_setupcertificates.htm" class="topiclink">Setting up a Certificate Store</a> for how to create the demo certificate store. The path to the certificate is specified at the top of </span><span class="f_FixedSize">ServerReportingAuditEvents.cpp </span><span class="f_Paragraph">and</span><span class="f_FixedSize"> TestAuditEvents.cpp</span><span class="f_Paragraph">, adapt it if it doesn't fit.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">Compile and start the sample applications </span><span class="f_Reference">ServerReportingAuditEvents</span><span class="f_Paragraph">. Run the server application in the debugger and step through the code.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">Compile and start the sample applications </span><span class="f_Reference">TestAuditEvents</span><span class="f_Paragraph">, the client connects automatically to the server.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">Trigger audit events using the &quot;</span><span class="f_FixedSize">t</span><span class="f_Paragraph">&quot; command on the client application.</span></td></tr></table></div><h3 class="p_Heading3"><span class="f_Heading3">Points of Interest</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">Server:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">The </span><span class="f_Reference">SampleEndpoint</span><span class="f_Paragraph"> extending <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_endpoint.htm" class="topiclink">Server::Endpoint</a> overwrites the callback methods <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_endpoint.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_endpoint_1a1f94273690f343c507ca37342b6ed63f" class="topiclink">onSecureChannelOpened()</a>, <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_endpoint.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_endpoint_1a0e2ec9985b2df6e53d633397ab8a3298" class="topiclink">onSessionCreated()</a> and <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_endpoint.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_endpoint_1a126820a38cb688fbf9138b277c6e70d9" class="topiclink">onSessionActivated()</a> to enable these audit events.</span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">The </span><span class="f_Reference">SampleVariable</span><span class="f_Paragraph"> extending <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_variable.htm" class="topiclink">Server::Variable</a> overrides the method <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_variable_1a131a1241d7a97fb89e95314ad0ec0185" class="topiclink">handleWriteRequest()</a> to report <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_audit_write_update_event.htm" class="topiclink">AuditWriteUpdateEvent</a></span></td></tr></table></div><p class="p_Paragraph"><span class="f_Paragraph">Client:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph">Define the filter to report only specific events on a subscription using <a href="class_softing_o_p_c_toolbox5_1_1_client_1_1_monitored_item.htm#class_softing_o_p_c_toolbox5_1_1_client_1_1_monitored_item_1a7f31edacdb30b295e890e070d9e5a586" class="topiclink">Client::MonitoredItem::setEventFilter</a></span></td></tr></table></div><h3 class="p_Heading3"><span class="f_Heading3">Note:</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">The default implementation (e.g. <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_endpoint.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_endpoint_1a0e2ec9985b2df6e53d633397ab8a3298" class="topiclink">Server::Endpoint::onSessionCreated()</a>) can be changed with a new OPC UA C++ Server &amp; Client SDK V6.00 version.</span><br />
<span class="f_Paragraph">When installing a new OPC UA C++ Server &amp; Client SDK V6.00 version verify that the copied part still matches the default implementation.</span><br />
<span class="f_Paragraph">Otherwise unpredictable behavior can happen.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The client starts two session where the first is used to subscribe for audit events.</span><br />
<span class="f_Paragraph">When the second session is connected, the audit events are reported.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The second session is also used for triggering an <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_audit_write_update_event.htm" class="topiclink">AuditWriteUpdateEvent</a> by writing a variable.</span></p>

      </td>
  </tr>
  <tr>
    <td colspan="2" style="padding-top: 0px;">
         <p>
            <hr />
            <a href="mailto:support.automation@softing.com?subject=OPC UA C++ Server &amp; Client SDK V6.00 Documentation Feedback:Page=html_sampleauditevents.htm">Send comments on this topic.</a>
         </p>
         <p>
            Copyright © Softing Industrial Automation GmbH&nbsp;2022
         </p>
    </td>
  </tr>
</table>
</body>
</html>
