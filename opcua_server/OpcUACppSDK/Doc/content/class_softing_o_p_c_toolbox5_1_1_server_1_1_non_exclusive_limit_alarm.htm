<!DOCTYPE HTML>
<html>
<head>
   <title>NonExclusiveLimitAlarm Class Reference</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">

<table width="100%" border="0" cellspacing="0" cellpadding="10">
  <tr valign="middle" bgcolor="#99CCFF">
    <td>
      <p>
        <table width="100%" border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td style="vertical-align:middle;">
              <p style="font-family:Verdana; font-size:9pt; font-style:italic;">OPC UA C++ Server &amp; Client SDK V6.00</p>
              <p style="font-family:Verdana; font-size:9pt; font-weight:bold;">NonExclusiveLimitAlarm Class Reference</p>
            </td>
          </tr>
        </table>
      </p>
    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="html_welcome.htm">Top</a>&nbsp;
     <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_level_alarm.htm">Previous</a>&nbsp;
     <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_rate_of_change_alarm.htm">Next</a>
     </span>
    </td>
  </tr>
  <tr bgcolor="white">
      <td colspan="2">
          <p style="margin: 0px 0px 0px 0px;"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm"></a></p>
<p><span class="f_CodeExample">#include &quot;ServerNonExclusiveLimitAlarm.h&quot;</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: Arial; color: #000000;">&nbsp;</span></p>
<p><map name="map129" id="map129"><area shape="rect" coords="391,571,577,605" href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_deviation_alarm.htm" alt="" /><area shape="rect" coords="235,6,322,29" href="class_softing_o_p_c_toolbox5_1_1_base.htm" alt="" /><area shape="rect" coords="223,379,334,413" href="class_softing_o_p_c_toolbox5_1_1_server_1_1_alarm_condition.htm" alt="" /><area shape="rect" coords="235,251,322,285" href="class_softing_o_p_c_toolbox5_1_1_server_1_1_condition.htm" alt="" /><area shape="rect" coords="191,315,366,349" href="class_softing_o_p_c_toolbox5_1_1_server_1_1_acknowledgeable_condition.htm" alt="" /><area shape="rect" coords="171,571,386,605" href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_rate_of_change_alarm.htm" alt="" /><area shape="rect" coords="235,59,322,93" href="class_softing_o_p_c_toolbox5_1_1_server_1_1_base_node.htm" alt="" /><area shape="rect" coords="235,123,322,157" href="class_softing_o_p_c_toolbox5_1_1_server_1_1_object.htm" alt="" /><area shape="rect" coords="235,187,322,221" href="class_softing_o_p_c_toolbox5_1_1_server_1_1_base_event.htm" alt="" /><area shape="rect" coords="235,443,322,477" href="class_softing_o_p_c_toolbox5_1_1_server_1_1_limit_alarm.htm" alt="" /><area shape="rect" coords="199,507,358,541" href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm" alt="" /><area shape="rect" coords="5,571,166,605" href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_level_alarm.htm" alt="" /></map><img src="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.gif" width="581" height="611" alt="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm" style="width:581px;height:611px;border:none" usemap="#map129" /></p>
<p class="p_Paragraph">The <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm" class="topiclink">NonExclusiveLimitAlarm</a> is used to specify the common behavior for alarm types with multiple non-exclusive limits.</p>
<p class="p_Paragraph"><span class="f_Heading3">See also:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_level_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_level_alarm" class="topiclink">NonExclusiveLevelAlarm</a> <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_deviation_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_deviation_alarm" class="topiclink">NonExclusiveDeviationAlarm</a> <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_rate_of_change_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_rate_of_change_alarm" class="topiclink">NonExclusiveRateOfChangeAlarm</a> </p>
</td>
</tr>
</table>
</div>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="ListOfMembers" style="width:100%; border:none; border-spacing:3px;">
<tr style="text-align:left;vertical-align:top;">
<td colspan="2" style="vertical-align:top; padding:0px;"><h2 class="p_Heading2"><span class="f_Heading2">Public Member Functions</span></h2>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">&nbsp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a7eab44cb9f9cfab15fac36ae098b19d0" class="topiclink">NonExclusiveLimitAlarm</a></span>(TBHandle otbHandle)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual </p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a05e15fca541112e717db3eaaf9e54799" class="topiclink">~NonExclusiveLimitAlarm</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable" class="topiclink">Server::TwoStateVariable</a> &gt;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a813b59c668466f8bf2bd837aca79c913" class="topiclink">getHighHighStateVar</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; const <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable" class="topiclink">Server::TwoStateVariable</a> &gt;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a1ad2a36e286e1c6d95ff54b8723af8e1" class="topiclink">getHighHighStateVar</a></span>() const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_localized_text.htm#class_softing_o_p_c_toolbox5_1_1_localized_text" class="topiclink">LocalizedText</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a19e8962758ac254e1b557a02a084c9e5" class="topiclink">getHighHighState</a></span>() const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable" class="topiclink">Server::TwoStateVariable</a> &gt;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a4c240f172241a4ee4c8e83fdbe087afb" class="topiclink">getHighStateVar</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; const <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable" class="topiclink">Server::TwoStateVariable</a> &gt;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a1ac33aa0206f36badde3ede15e0f8c00" class="topiclink">getHighStateVar</a></span>() const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_localized_text.htm#class_softing_o_p_c_toolbox5_1_1_localized_text" class="topiclink">LocalizedText</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a1f1dd8f28a269f5faa26c7bf222d36e5" class="topiclink">getHighState</a></span>() const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable" class="topiclink">Server::TwoStateVariable</a> &gt;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1af0615929aa8e392b59ca3fc5eb760ee3" class="topiclink">getLowStateVar</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; const <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable" class="topiclink">Server::TwoStateVariable</a> &gt;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1ace9896d55b1302d01b52d28fde3e2cd1" class="topiclink">getLowStateVar</a></span>() const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_localized_text.htm#class_softing_o_p_c_toolbox5_1_1_localized_text" class="topiclink">LocalizedText</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a85c5d5c2e7496e552639a6494f9b5d36" class="topiclink">getLowState</a></span>() const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable" class="topiclink">Server::TwoStateVariable</a> &gt;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a1a4870a3de1aca9603cef944117f382f" class="topiclink">getLowLowStateVar</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; const <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable" class="topiclink">Server::TwoStateVariable</a> &gt;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1ae4ef37537fdbc3c5a999388b64c1d60f" class="topiclink">getLowLowStateVar</a></span>() const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_localized_text.htm#class_softing_o_p_c_toolbox5_1_1_localized_text" class="topiclink">LocalizedText</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1ae1e5c001e39f114b65d26f4c5d497122" class="topiclink">getLowLowState</a></span>() const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual void</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a454f98c15ecdbfda99e01d3c50b6697b" class="topiclink">onVariableChanged</a></span>(Server::Variable *var, const IDataValue *value)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1ab907b455e63df14799ef6c9e044a38c8" class="topiclink">createBranch</a></span>(Server::Condition *branchToConstruct)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td colspan="2" style="vertical-align:top; padding:0px;"><h2 class="p_Heading2"><span class="f_Heading2">Public Static Member Functions</span></h2>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">static <a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm" class="topiclink">NonExclusiveLimitAlarm</a> &gt;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a314bd297e085b67ac50878c059f9dcea" class="topiclink">create</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td colspan="2" style="vertical-align:top; padding:0px;"><h2 class="p_Heading2"><span class="f_Heading2">Protected Member Functions</span></h2>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">&nbsp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a496571dc91af7063957ffce1a0d02528" class="topiclink">NonExclusiveLimitAlarm</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">&nbsp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1ab27056706e8d1bfea7a16c7b4caf9045" class="topiclink">NonExclusiveLimitAlarm</a></span>(bool suppressCoreInstanceCreate)</p>
</td>
</tr>
</table>
</div>
<hr style="height:2px; color:#000000; border-width:0px; background-color:#000000;" /><p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a314bd297e085b67ac50878c059f9dcea"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>static <a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm" class="topiclink">NonExclusiveLimitAlarm</a> &gt;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::create</span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Constructs a new <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm" class="topiclink">NonExclusiveLimitAlarm</a> instance </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_limit_alarm_1a488ab85bd370e5b2ea317e6aeff70f29" class="topiclink">SoftingOPCToolbox5::Server::LimitAlarm</a>.</p>
<p>Reimplemented in <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_level_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_level_alarm_1a1edc21cd5a790f9233153b6e39212d31" class="topiclink">SoftingOPCToolbox5::Server::NonExclusiveLevelAlarm</a>, <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_rate_of_change_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_rate_of_change_alarm_1a8fa1b10e076b68a813b0333caac0ef66" class="topiclink">SoftingOPCToolbox5::Server::NonExclusiveRateOfChangeAlarm</a>, and <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_deviation_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_deviation_alarm_1af6bbb11969f776ddb73f424c0539d5d2" class="topiclink">SoftingOPCToolbox5::Server::NonExclusiveDeviationAlarm</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a7eab44cb9f9cfab15fac36ae098b19d0"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::NonExclusiveLimitAlarm</span>(TBHandle <span class="f_Parameter">otbHandle</span>)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Constructor that shall be used by derived classes whose instances are created by the <a href="class_softing_o_p_c_toolbox5_1_1_creator.htm#class_softing_o_p_c_toolbox5_1_1_creator" class="topiclink">Creator</a> object factory </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a05e15fca541112e717db3eaaf9e54799"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::~NonExclusiveLimitAlarm</span>()<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Destructor </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a813b59c668466f8bf2bd837aca79c913"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable" class="topiclink">Server::TwoStateVariable</a> &gt;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::getHighHighStateVar</span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns the 'HighHighState' variable. The value of this variable indicates whether the HighHigh limit has been exceeded or not.</p>
<p class="p_Paragraph">Please use <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable_1a1c77602611ffc3600f455ca77478ad83" class="topiclink">TwoStateVariable::setCurrentState()</a> to change the current state. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a1ad2a36e286e1c6d95ff54b8723af8e1"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; const <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable" class="topiclink">Server::TwoStateVariable</a> &gt;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::getHighHighStateVar</span>() const</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a19e8962758ac254e1b557a02a084c9e5"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_localized_text.htm#class_softing_o_p_c_toolbox5_1_1_localized_text" class="topiclink">LocalizedText</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::getHighHighState</span>() const</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns the localized text that describes the current HighHigh state.</p>
<p class="p_Paragraph"><span class="f_Heading3">Note:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p>Please use <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable_1a41668010c142483d412d0c2f14943edf" class="topiclink">TwoStateVariable::getCurrentState()</a> to retrieve the current HighHigh state (see <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a813b59c668466f8bf2bd837aca79c913" class="topiclink">NonExclusiveLimitAlarm::getHighHighStateVar()</a>). The localized texts that describe the 'true' and 'false' HighHigh state can be retrieved by <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable_1a86152a61ff7d3232bf83f6c2b21e8580" class="topiclink">TwoStateVariable::getTrueState()</a> and <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable_1af0f76418145b3dc5c87760c36ebb6add" class="topiclink">TwoStateVariable::getFalseState()</a>. </p>
</td>
</tr>
</table>
</div>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a4c240f172241a4ee4c8e83fdbe087afb"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable" class="topiclink">Server::TwoStateVariable</a> &gt;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::getHighStateVar</span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns the 'HighState' variable. The value of this variable indicates whether the High limit has been exceeded or not.</p>
<p class="p_Paragraph">Please use <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable_1a1c77602611ffc3600f455ca77478ad83" class="topiclink">TwoStateVariable::setCurrentState()</a> to change the current state. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a1ac33aa0206f36badde3ede15e0f8c00"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; const <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable" class="topiclink">Server::TwoStateVariable</a> &gt;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::getHighStateVar</span>() const</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a1f1dd8f28a269f5faa26c7bf222d36e5"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_localized_text.htm#class_softing_o_p_c_toolbox5_1_1_localized_text" class="topiclink">LocalizedText</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::getHighState</span>() const</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns the localized text that describes the current High state.</p>
<p class="p_Paragraph"><span class="f_Heading3">Note:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p>Please use <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable_1a41668010c142483d412d0c2f14943edf" class="topiclink">TwoStateVariable::getCurrentState()</a> to retrieve the current High state (see <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a4c240f172241a4ee4c8e83fdbe087afb" class="topiclink">NonExclusiveLimitAlarm::getHighStateVar()</a>). The localized texts that describe the 'true' and 'false' High state can be retrieved by <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable_1a86152a61ff7d3232bf83f6c2b21e8580" class="topiclink">TwoStateVariable::getTrueState()</a> and <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable_1af0f76418145b3dc5c87760c36ebb6add" class="topiclink">TwoStateVariable::getFalseState()</a>. </p>
</td>
</tr>
</table>
</div>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1af0615929aa8e392b59ca3fc5eb760ee3"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable" class="topiclink">Server::TwoStateVariable</a> &gt;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::getLowStateVar</span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns the 'LowState' variable. The value of this variable indicates whether the Low limit has been exceeded or not.</p>
<p class="p_Paragraph">Please use <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable_1a1c77602611ffc3600f455ca77478ad83" class="topiclink">TwoStateVariable::setCurrentState()</a> to change the current state. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1ace9896d55b1302d01b52d28fde3e2cd1"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; const <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable" class="topiclink">Server::TwoStateVariable</a> &gt;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::getLowStateVar</span>() const</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a85c5d5c2e7496e552639a6494f9b5d36"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_localized_text.htm#class_softing_o_p_c_toolbox5_1_1_localized_text" class="topiclink">LocalizedText</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::getLowState</span>() const</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns the localized text that describes the current Low state.</p>
<p class="p_Paragraph"><span class="f_Heading3">Note:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p>Please use <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable_1a41668010c142483d412d0c2f14943edf" class="topiclink">TwoStateVariable::getCurrentState()</a> to retrieve the current Low state (see <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1af0615929aa8e392b59ca3fc5eb760ee3" class="topiclink">NonExclusiveLimitAlarm::getLowStateVar()</a>). The localized texts that describe the 'true' and 'false' Low state can be retrieved by <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable_1a86152a61ff7d3232bf83f6c2b21e8580" class="topiclink">TwoStateVariable::getTrueState()</a> and <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable_1af0f76418145b3dc5c87760c36ebb6add" class="topiclink">TwoStateVariable::getFalseState()</a>. </p>
</td>
</tr>
</table>
</div>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a1a4870a3de1aca9603cef944117f382f"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable" class="topiclink">Server::TwoStateVariable</a> &gt;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::getLowLowStateVar</span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns the 'LowLowState' variable. The value of this variable indicates whether the LowLow limit has been exceeded or not.</p>
<p class="p_Paragraph">Please use <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable_1a1c77602611ffc3600f455ca77478ad83" class="topiclink">TwoStateVariable::setCurrentState()</a> to change the current state. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1ae4ef37537fdbc3c5a999388b64c1d60f"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_object_pointer.htm#class_softing_o_p_c_toolbox5_1_1_object_pointer" class="topiclink">ObjectPointer</a>&lt; const <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable" class="topiclink">Server::TwoStateVariable</a> &gt;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::getLowLowStateVar</span>() const</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1ae1e5c001e39f114b65d26f4c5d497122"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_localized_text.htm#class_softing_o_p_c_toolbox5_1_1_localized_text" class="topiclink">LocalizedText</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::getLowLowState</span>() const</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns the localized text that describes the current LowLow state.</p>
<p class="p_Paragraph"><span class="f_Heading3">Note:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p>Please use <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable_1a41668010c142483d412d0c2f14943edf" class="topiclink">TwoStateVariable::getCurrentState()</a> to retrieve the current LowLow state (see <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a1a4870a3de1aca9603cef944117f382f" class="topiclink">NonExclusiveLimitAlarm::getLowLowStateVar()</a>). The localized texts that describe the 'true' and 'false' LowLow state can be retrieved by <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable_1a86152a61ff7d3232bf83f6c2b21e8580" class="topiclink">TwoStateVariable::getTrueState()</a> and <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_two_state_variable_1af0f76418145b3dc5c87760c36ebb6add" class="topiclink">TwoStateVariable::getFalseState()</a>. </p>
</td>
</tr>
</table>
</div>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a454f98c15ecdbfda99e01d3c50b6697b"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual void<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::onVariableChanged</span>(<a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_variable.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_variable" class="topiclink">Server::Variable</a> * <span class="f_Parameter">var</span>, const <a href="class_softing_o_p_c_toolbox5_1_1_i_data_value.htm#class_softing_o_p_c_toolbox5_1_1_i_data_value" class="topiclink">IDataValue</a> * <span class="f_Parameter">value</span>)<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Callback method that is called whenever the input variable changes its value.</p>
<p class="p_Paragraph">Please note that the input variable needs to have a 'HasCondition' reference that points to this alarm in order to trigger this callback method.</p>
<p class="p_Paragraph">An application should override this method to match its own requirements. The method needs to be overridden, for example, if </p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">the input variable has a data type different from double or float, </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">alarms are generated in an underlying system or </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">alarms use condition branches</td></tr></table></div></td>
</tr>
</table>
</div>
<p class="p_Paragraph"><span class="f_Heading3">Parameters:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p style="margin: 5px 5px 0px 0px;"><span class="f_Parameter">var</span></p>
</td>
<td style="vertical-align:top; padding:2px;"><p class="p_Paragraph">The variable which has changed </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p style="margin: 5px 5px 0px 0px;"><span class="f_Parameter">value</span></p>
</td>
<td style="vertical-align:top; padding:2px;"><p class="p_Paragraph">The new value of that variable</p>
</td>
</tr>
</table>
</div>
<h3 class="p_Heading3"><span class="f_Heading3">See also:</span></h3>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_condition.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_condition_1abb3cb22c4cc99b65948a920964dcfd43" class="topiclink">Condition::onVariableChanged()</a> </p>
</td>
</tr>
</table>
</div>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_condition.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_condition_1abb3cb22c4cc99b65948a920964dcfd43" class="topiclink">SoftingOPCToolbox5::Server::Condition</a>.</p>
<p>Reimplemented in <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_deviation_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_deviation_alarm_1a65e6c057a33307e346e5f6cfd28267ab" class="topiclink">SoftingOPCToolbox5::Server::NonExclusiveDeviationAlarm</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1ab907b455e63df14799ef6c9e044a38c8"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::createBranch</span>(<a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_condition.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_condition" class="topiclink">Server::Condition</a> * <span class="f_Parameter">branchToConstruct</span>)<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Creates a new branch (copy) of this condition. The branch is made available after construction by calling <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_condition.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_condition_1a6b7e4f06533c9b4b9ac67e7b6c6c97eb" class="topiclink">Condition::addBranch()</a>.</p>
<p class="p_Paragraph">The caller must provide a valid pointer to an &quot;empty&quot; branch (instance of a condition (sub-)type). Override this method to add custom components (Objects, Variables, Methods) to your branch instance. Default implementations populate the branch with all components of a condition (sub-)type except for state machines. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_limit_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_limit_alarm_1a5ed96b93d17c96ecab27989d30e5c165" class="topiclink">SoftingOPCToolbox5::Server::LimitAlarm</a>.</p>
<p>Reimplemented in <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_deviation_alarm.htm#class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_deviation_alarm_1af2df92ae9e352552591bf892aed4e71b" class="topiclink">SoftingOPCToolbox5::Server::NonExclusiveDeviationAlarm</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1a496571dc91af7063957ffce1a0d02528"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::NonExclusiveLimitAlarm</span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Default constructor </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm_1ab27056706e8d1bfea7a16c7b4caf9045"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><span style="font-weight: bold;">SoftingOPCToolbox5::Server::NonExclusiveLimitAlarm::NonExclusiveLimitAlarm</span>(bool <span class="f_Parameter">suppressCoreInstanceCreate</span>)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">For internal use only </p>
</td>
</tr>
</table>
</div>

      </td>
  </tr>
  <tr>
    <td colspan="2" style="padding-top: 0px;">
         <p>
            <hr />
            <a href="mailto:support.automation@softing.com?subject=OPC UA C++ Server &amp; Client SDK V6.00 Documentation Feedback:Page=class_softing_o_p_c_toolbox5_1_1_server_1_1_non_exclusive_limit_alarm.htm">Send comments on this topic.</a>
         </p>
         <p>
            Copyright © Softing Industrial Automation GmbH&nbsp;2022
         </p>
    </td>
  </tr>
</table>
</body>
</html>
