<!DOCTYPE HTML>
<html>
<head>
   <title>Argument Class Reference</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "class_softing_o_p_c_toolbox5_1_1_argument.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">

<table width="100%" border="0" cellspacing="0" cellpadding="10">
  <tr valign="middle" bgcolor="#99CCFF">
    <td>
      <p>
        <table width="100%" border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td style="vertical-align:middle;">
              <p style="font-family:Verdana; font-size:9pt; font-style:italic;">OPC UA C++ Server &amp; Client SDK V6.00</p>
              <p style="font-family:Verdana; font-size:9pt; font-weight:bold;">Argument Class Reference</p>
            </td>
          </tr>
        </table>
      </p>
    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="html_welcome.htm">Top</a>&nbsp;
     <a href="class_softing_o_p_c_toolbox5_1_1_application_description.htm">Previous</a>&nbsp;
     <a href="class_softing_o_p_c_toolbox5_1_1_attribute_operand.htm">Next</a>
     </span>
    </td>
  </tr>
  <tr bgcolor="white">
      <td colspan="2">
          <p style="margin: 0px 0px 0px 0px;"><a id="class_softing_o_p_c_toolbox5_1_1_argument"></a></p>
<p><span class="f_CodeExample">#include &quot;Argument.h&quot;</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: Arial; color: #000000;">&nbsp;</span></p>
<p><map name="map178" id="map178"><area shape="rect" coords="5,6,91,29" href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm" alt="" /><area shape="rect" coords="5,59,91,82" href="class_softing_o_p_c_toolbox5_1_1_argument.htm" alt="" /></map><img src="class_softing_o_p_c_toolbox5_1_1_argument.gif" width="96" height="88" alt="class_softing_o_p_c_toolbox5_1_1_argument" style="width:96px;height:88px;border:none" usemap="#map178" /></p>
<p class="p_Paragraph">The <a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument" class="topiclink">Argument</a> data type describes an input or output parameter of an OPC UA Method. </p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="ListOfMembers" style="width:100%; border:none; border-spacing:3px;">
<tr style="text-align:left;vertical-align:top;">
<td colspan="2" style="vertical-align:top; padding:0px;"><h2 class="p_Heading2"><span class="f_Heading2">Public Member Functions</span></h2>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">&nbsp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1ace18e2d62a3e0845fb0633c7709dee24" class="topiclink">Argument</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">&nbsp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a82b9e105448a6d039cb8ee68c6291456" class="topiclink">Argument</a></span>(const IArgument *)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">&nbsp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a4c6ca370e6ea366d4846d027ff3a21c5" class="topiclink">Argument</a></span>(const IArgument &amp;)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">&nbsp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a40f3d271182cd2cb064efbdff78301a7" class="topiclink">Argument</a></span>(const Argument &amp;)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual </p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a3e74668d771d73724077f1247aaa65dc" class="topiclink">~Argument</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument" class="topiclink">Argument</a> &amp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a277d1f4490e513c66460f0dee50533b9" class="topiclink">operator=</a></span>(const IArgument *)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument" class="topiclink">Argument</a> &amp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a0a67efe8768f6aef56dbf101069a21f3" class="topiclink">operator=</a></span>(const IArgument &amp;)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument" class="topiclink">Argument</a> &amp;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a9ffac44dfa85f3c0f7553341aaea520a" class="topiclink">operator=</a></span>(const Argument &amp;)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a4591922e2fdaa2ba0da9248cb7cec974" class="topiclink">set</a></span>(const IArgument *pSrc)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1ac45e0a7f70c92c19c66eb0d6e2045ae5" class="topiclink">set</a></span>(const IArgument &amp;pSrc)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual int</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1adc5f296c7e5ad635f60c1a425211632a" class="topiclink">compare</a></span>(const IArgument *) const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual int</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a4e7b63c94447051f7dab549561ffbaaf" class="topiclink">compare</a></span>(const IArgument &amp;) const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual bool</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1ac6bcddbb910acd9a328f00b89ead7170" class="topiclink">operator==</a></span>(const IArgument &amp;other) const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual bool</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1aa6655b4b8991149e77366b384cca77a8" class="topiclink">operator!=</a></span>(const IArgument &amp;other) const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual const <a href="class_softing_o_p_c_toolbox5_1_1_i_node_id.htm#class_softing_o_p_c_toolbox5_1_1_i_node_id" class="topiclink">INodeId</a> *</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a18b05aebcfc7f1cddf328a9beef74d0b" class="topiclink">getDataType</a></span>() const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="class_softing_o_p_c_toolbox5_1_1_i_node_id.htm#class_softing_o_p_c_toolbox5_1_1_i_node_id" class="topiclink">INodeId</a> *</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1ad9e72defd6c2c16981f582fbeca33bf2" class="topiclink">getDataType</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual void</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a7ba3520b23f5c91ff76e2d9ee211ba93" class="topiclink">setDataType</a></span>(const INodeId *value)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual void</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a0d4c2583e9eb6898c4416904f01322d8" class="topiclink">setDataType</a></span>(const NodeId &amp;value)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual tstring</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a31be69284faf7935518d2b8166ebd935" class="topiclink">getName</a></span>() const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual void</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1ad6c48e9345b2967b262ddb1008aca382" class="topiclink">setName</a></span>(const tstring &amp;name)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual OTInt32</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1ad2df9dee3ee983c72c2183c8ef3bcd55" class="topiclink">getValueRank</a></span>() const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual void</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a2bbe7221ad94a6ebec6c10ceabc72c61" class="topiclink">setValueRank</a></span>(OTInt32 valueRank)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual std::vector&lt; OTUInt32 &gt;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a0614b6b76c346fe064e49c3be788e867" class="topiclink">getArrayDimensions</a></span>() const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a91499403c60aa2400a314d6a4788338e" class="topiclink">setArrayDimensions</a></span>(const std::vector&lt; OTUInt32 &gt; &amp;)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual const <a href="class_softing_o_p_c_toolbox5_1_1_i_localized_text.htm#class_softing_o_p_c_toolbox5_1_1_i_localized_text" class="topiclink">ILocalizedText</a> *</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a2c3237c639396a8d496160c44c6715b9" class="topiclink">getDescription</a></span>() const </p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="class_softing_o_p_c_toolbox5_1_1_i_localized_text.htm#class_softing_o_p_c_toolbox5_1_1_i_localized_text" class="topiclink">ILocalizedText</a> *</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a447da947ba45484ac39c633415a3f382" class="topiclink">getDescription</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual void</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a0ff1adb8b1d39e7b42bd48dabec4cf55" class="topiclink">setDescription</a></span>(const ILocalizedText *value)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual void</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1ae475af806e1fc668355395f89b8686fc" class="topiclink">setDescription</a></span>(const LocalizedText &amp;value)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">void</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a0f22622723c981d939cd225b260a837a" class="topiclink">clear</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual void *</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a4a7cf24d3d6f09954b03c42edd211d63" class="topiclink">getInternHandle</a></span>() const </p>
</td>
</tr>
</table>
</div>
<hr style="height:2px; color:#000000; border-width:0px; background-color:#000000;" /><p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1ace18e2d62a3e0845fb0633c7709dee24"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::Argument</span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Default constructor </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a82b9e105448a6d039cb8ee68c6291456"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::Argument</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument" class="topiclink">IArgument</a> * <span class="f_Parameter"> </span>)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Constructs a copy of the given instance </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a4c6ca370e6ea366d4846d027ff3a21c5"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::Argument</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument" class="topiclink">IArgument</a> &amp; <span class="f_Parameter"> </span>)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a40f3d271182cd2cb064efbdff78301a7"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::Argument</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument" class="topiclink">Argument</a> &amp; <span class="f_Parameter"> </span>)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a3e74668d771d73724077f1247aaa65dc"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <span style="font-weight: bold;">SoftingOPCToolbox5::Argument::~Argument</span>()<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Destructor </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a277d1f4490e513c66460f0dee50533b9"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument" class="topiclink">Argument</a> &amp;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::operator=</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument" class="topiclink">IArgument</a> * <span class="f_Parameter"> </span>)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Assigns the contents of <span class="f_Parameter">cp</span> to this instance </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a0a67efe8768f6aef56dbf101069a21f3"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument" class="topiclink">Argument</a> &amp;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::operator=</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument" class="topiclink">IArgument</a> &amp; <span class="f_Parameter"> </span>)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a9ffac44dfa85f3c0f7553341aaea520a"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument" class="topiclink">Argument</a> &amp;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::operator=</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument" class="topiclink">Argument</a> &amp; <span class="f_Parameter"> </span>)</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a4591922e2fdaa2ba0da9248cb7cec974"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::set</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument" class="topiclink">IArgument</a> * <span class="f_Parameter">cp</span>)<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Copies the content of <span class="f_Parameter">cp</span> to this instance </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1a59698ea6a5f69b07fc66b5ecbf02eb06" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1ac45e0a7f70c92c19c66eb0d6e2045ae5"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::set</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument" class="topiclink">IArgument</a> &amp; <span class="f_Parameter">pSrc</span>)<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1a75311ddd66505f4a66a7ee912950302e" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1adc5f296c7e5ad635f60c1a425211632a"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual int<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::compare</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument" class="topiclink">IArgument</a> * <span class="f_Parameter">other</span>) const<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Compares this instance to the given <span class="f_Parameter">other</span> instance.</p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">Returns &lt;0, if &quot;this &lt; other&quot; </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">Returns 0, if &quot;this == other&quot; </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">Returns &gt;0, if &quot;this &gt; other&quot; </td></tr></table></div></td>
</tr>
</table>
</div>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1a9acc324348afb3198d665a44fbb384f4" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a4e7b63c94447051f7dab549561ffbaaf"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual int<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::compare</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument" class="topiclink">IArgument</a> &amp; <span class="f_Parameter"> </span>) const<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1acad45b90b516d84884464eff7d65da48" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1ac6bcddbb910acd9a328f00b89ead7170"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual bool<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::operator==</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument" class="topiclink">IArgument</a> &amp; <span class="f_Parameter">other</span>) const<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Compares two instances for equality </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1a823d72d08b23c70399e8c20d6816d5be" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1aa6655b4b8991149e77366b384cca77a8"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual bool<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::operator!=</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument" class="topiclink">IArgument</a> &amp; <span class="f_Parameter">other</span>) const<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Compares two instances for inequality </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1acff4e7afda4ad27551ebeed85384164b" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a18b05aebcfc7f1cddf328a9beef74d0b"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual const <a href="class_softing_o_p_c_toolbox5_1_1_i_node_id.htm#class_softing_o_p_c_toolbox5_1_1_i_node_id" class="topiclink">INodeId</a> *<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::getDataType</span>() const<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns the <a href="class_softing_o_p_c_toolbox5_1_1_node_id.htm#class_softing_o_p_c_toolbox5_1_1_node_id" class="topiclink">NodeId</a> of the argument's data type. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1acf6816bdbfa5849ed080d8217dff0843" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1ad9e72defd6c2c16981f582fbeca33bf2"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="class_softing_o_p_c_toolbox5_1_1_i_node_id.htm#class_softing_o_p_c_toolbox5_1_1_i_node_id" class="topiclink">INodeId</a> *<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::getDataType</span>()<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1aa14c0c8af1a09052f495e1c120727a4b" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a7ba3520b23f5c91ff76e2d9ee211ba93"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual void<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::setDataType</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_node_id.htm#class_softing_o_p_c_toolbox5_1_1_i_node_id" class="topiclink">INodeId</a> * <span class="f_Parameter">value</span>)<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Sets the <a href="class_softing_o_p_c_toolbox5_1_1_node_id.htm#class_softing_o_p_c_toolbox5_1_1_node_id" class="topiclink">NodeId</a> of the argument's data type. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1aded43b1e2f2cec5d5de29fc465e64aa3" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a0d4c2583e9eb6898c4416904f01322d8"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual void<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::setDataType</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_node_id.htm#class_softing_o_p_c_toolbox5_1_1_node_id" class="topiclink">NodeId</a> &amp; <span class="f_Parameter">value</span>)<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1a23ac2bc878d6e3d3ede7a73e929a72f0" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a31be69284faf7935518d2b8166ebd935"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual tstring<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::getName</span>() const<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns the name of the argument </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1ab62d357af0fe8f8531f7dc9fd8e32c37" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1ad6c48e9345b2967b262ddb1008aca382"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual void<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::setName</span>(const tstring &amp; <span class="f_Parameter">value</span>)<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Sets the name of the argument </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1a1b551423a649a17a0fa7a761a42dec03" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1ad2df9dee3ee983c72c2183c8ef3bcd55"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual OTInt32<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::getValueRank</span>() const<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns the value rank of the argument. The value rank indicates whether the data type is an array and how many dimensions the array has. <span class="f_Heading3">See also:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a2bbe7221ad94a6ebec6c10ceabc72c61" class="topiclink">setValueRank()</a> </p>
</td>
</tr>
</table>
</div>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1a2f24a072467ae48d8780d2a98fa41815" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a2bbe7221ad94a6ebec6c10ceabc72c61"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual void<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::setValueRank</span>(OTInt32 <span class="f_Parameter">value</span>)<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Sets the value rank of the argument. The value rank indicates whether the data type is an array and how many dimensions the array has.</p>
<p class="p_Paragraph">If the rank is </p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">&gt;= 1 it defines the array dimensions of the value, </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">-1 means scalar (not an array), </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">0 means 1 or more dimensions </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">-2 means scalar or an array with any number of dimensions. </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">-3 means the value can be a scalar or a one dimensional array.</td></tr></table></div></td>
</tr>
</table>
</div>
<p class="p_Paragraph"><span class="f_Heading3">Note:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p>If the array dimensions don't match to the new value rank, then the array dimensions are automatically updated to matching dimensions without length limitation. </p>
</td>
</tr>
</table>
</div>
<h3 class="p_Heading3"><span class="f_Heading3">See also:</span></h3>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a91499403c60aa2400a314d6a4788338e" class="topiclink">setArrayDimensions</a> </p>
</td>
</tr>
</table>
</div>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1a28a9c125f8734e862bf46b2afd104b93" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a0614b6b76c346fe064e49c3be788e867"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual std::vector&lt; OTUInt32 &gt;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::getArrayDimensions</span>() const<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns the length of each dimension for an array data type. <span class="f_Heading3">See also:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a91499403c60aa2400a314d6a4788338e" class="topiclink">setArrayDimensions()</a> <a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a2bbe7221ad94a6ebec6c10ceabc72c61" class="topiclink">setValueRank()</a> </p>
</td>
</tr>
</table>
</div>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1a8403fcb5672cf1d54ddbf0c857c5da2c" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a91499403c60aa2400a314d6a4788338e"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::setArrayDimensions</span>(const std::vector&lt; OTUInt32 &gt; &amp; <span class="f_Parameter"> </span>)<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Sets the length of each dimension for an array data type. </p>
<p class="p_Paragraph">It is intended to describe the capability of the data type, not the current size. The number of elements shall be equal to the value of the value rank and shall be null if valueRank &lt;= 0. A value of 0 for an individual dimension indicates that the dimension has a variable length.</p>
<p class="p_Paragraph"><span class="f_Heading3">Note:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p>If the value rank does not match to the new array dimensions, then the value rank is automatically updated to the exact dimension. </p>
</td>
</tr>
</table>
</div>
<h3 class="p_Heading3"><span class="f_Heading3">See also:</span></h3>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_argument.htm#class_softing_o_p_c_toolbox5_1_1_argument_1a2bbe7221ad94a6ebec6c10ceabc72c61" class="topiclink">setValueRank</a> </p>
</td>
</tr>
</table>
</div>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1ad4dffa6eec74a692f78aa16ff29571cb" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a2c3237c639396a8d496160c44c6715b9"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual const <a href="class_softing_o_p_c_toolbox5_1_1_i_localized_text.htm#class_softing_o_p_c_toolbox5_1_1_i_localized_text" class="topiclink">ILocalizedText</a> *<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::getDescription</span>() const<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns a localized description of the argument. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1afa22f6a01f61ad6f96100ca7b3636dad" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a447da947ba45484ac39c633415a3f382"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="class_softing_o_p_c_toolbox5_1_1_i_localized_text.htm#class_softing_o_p_c_toolbox5_1_1_i_localized_text" class="topiclink">ILocalizedText</a> *<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::getDescription</span>()<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1a2191e904172b96ee092b0cbbd8e2b543" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a0ff1adb8b1d39e7b42bd48dabec4cf55"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual void<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::setDescription</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_localized_text.htm#class_softing_o_p_c_toolbox5_1_1_i_localized_text" class="topiclink">ILocalizedText</a> * <span class="f_Parameter">value</span>)<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Sets a localized description of the argument. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1a47ec20ec53dbb0f7d00f331eac801f30" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1ae475af806e1fc668355395f89b8686fc"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual void<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::setDescription</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_localized_text.htm#class_softing_o_p_c_toolbox5_1_1_localized_text" class="topiclink">LocalizedText</a> &amp; <span class="f_Parameter">value</span>)<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1a5df7760362060490cb4700bf03ee2219" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a0f22622723c981d939cd225b260a837a"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>void<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::clear</span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Clears the contents of this object to enable its re-use. </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_argument_1a4a7cf24d3d6f09954b03c42edd211d63"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual void *<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::Argument::getInternHandle</span>() const<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">For internal use only </p>
<p>Reimplemented from <a href="class_softing_o_p_c_toolbox5_1_1_i_argument.htm#class_softing_o_p_c_toolbox5_1_1_i_argument_1a66ea007a2941ccc51ca52b98957e8542" class="topiclink">SoftingOPCToolbox5::IArgument</a>.</p>
</td>
</tr>
</table>
</div>

      </td>
  </tr>
  <tr>
    <td colspan="2" style="padding-top: 0px;">
         <p>
            <hr />
            <a href="mailto:support.automation@softing.com?subject=OPC UA C++ Server &amp; Client SDK V6.00 Documentation Feedback:Page=class_softing_o_p_c_toolbox5_1_1_argument.htm">Send comments on this topic.</a>
         </p>
         <p>
            Copyright © Softing Industrial Automation GmbH&nbsp;2022
         </p>
    </td>
  </tr>
</table>
</body>
</html>
