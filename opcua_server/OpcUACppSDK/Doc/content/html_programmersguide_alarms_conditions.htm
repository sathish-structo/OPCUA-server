<!DOCTYPE HTML>
<html>
<head>
   <title>Alarms &amp; Conditions</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "html_programmersguide_alarms_conditions.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">

<table width="100%" border="0" cellspacing="0" cellpadding="10">
  <tr valign="middle" bgcolor="#99CCFF">
    <td>
      <p>
        <table width="100%" border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td style="vertical-align:middle;">
              <p style="font-family:Verdana; font-size:9pt; font-style:italic;">OPC UA C++ Server &amp; Client SDK V6.00</p>
              <p style="font-family:Verdana; font-size:9pt; font-weight:bold;">Alarms &amp; Conditions</p>
            </td>
          </tr>
        </table>
      </p>
    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="html_welcome.htm">Top</a>&nbsp;
     <a href="html_serveruserauthorization.htm">Previous</a>&nbsp;
     <a href="html_ancserver.htm">Next</a>
     </span>
    </td>
  </tr>
  <tr bgcolor="white">
      <td colspan="2">
          <p class="p_Paragraph"><span class="f_Paragraph">Alarms and Conditions are based on Events.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">An event is a notification of an occurrence of some significance within a system or system component.</span><br />
<span class="f_Paragraph">Thus an event represents a notification of a transient i.e. stateless occurrence - these events are also called &quot;simple events&quot;.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">In case of non-transient i.e. stateful occurrences the events are named conditions or alarms. </span><br />
<span class="f_Paragraph">Those conditions and alarms are usually represented in the address space of an OPC UA server.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">See <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_base_event.htm" class="topiclink">BaseEvent Class Reference</a> for a hierarchy model showing all classes in OPC UA C++ Server &amp; Client SDK V6.00 implementing the mandatory interface common to all types of events.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The common properties of all events are listed in the table below:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:110px; padding:3px;"><p><span class="f_Paragraph" style="font-weight: bold;">BrowseName</span></p>
</td>
<td style="vertical-align:top; width:134px; padding:3px;"><p><span class="f_Paragraph" style="font-weight: bold;">OPC UA Data Type</span></p>
</td>
<td style="vertical-align:top; width:102px; padding:3px;"><p><span class="f_Paragraph" style="font-weight: bold;">Modelling Rule</span></p>
</td>
<td style="vertical-align:top; width:605px; padding:3px;"><p><span class="f_Paragraph" style="font-weight: bold;">Comment</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:110px; padding:3px;"><p><span class="f_Paragraph">EventId</span></p>
</td>
<td style="vertical-align:top; width:134px; padding:3px;"><p><span class="f_Paragraph">ByteString</span></p>
</td>
<td style="vertical-align:top; width:102px; padding:3px;"><p><span class="f_Paragraph">Mandatory</span></p>
</td>
<td style="vertical-align:top; width:605px; padding:3px;"><p><span class="f_Paragraph">Generated by OPC UA C++ Server &amp; Client SDK V6.00 when reporting an event</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:110px; padding:3px;"><p><span class="f_Paragraph">EventType</span></p>
</td>
<td style="vertical-align:top; width:134px; padding:3px;"><p><span class="f_Paragraph">NodeId</span></p>
</td>
<td style="vertical-align:top; width:102px; padding:3px;"><p><span class="f_Paragraph">Mandatory</span></p>
</td>
<td style="vertical-align:top; width:605px; padding:3px;"><p><span class="f_Paragraph">Describes the type of the event. It is the node ID of the type node.</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:110px; padding:3px;"><p><span class="f_Paragraph">SourceNode</span></p>
</td>
<td style="vertical-align:top; width:134px; padding:3px;"><p><span class="f_Paragraph">NodeId</span></p>
</td>
<td style="vertical-align:top; width:102px; padding:3px;"><p><span class="f_Paragraph">Mandatory</span></p>
</td>
<td style="vertical-align:top; width:605px; padding:3px;"><p><span class="f_Paragraph">Node which originates the event. </span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:110px; padding:3px;"><p><span class="f_Paragraph">SourceName</span></p>
</td>
<td style="vertical-align:top; width:134px; padding:3px;"><p><span class="f_Paragraph">String</span></p>
</td>
<td style="vertical-align:top; width:102px; padding:3px;"><p><span class="f_Paragraph">Mandatory</span></p>
</td>
<td style="vertical-align:top; width:605px; padding:3px;"><p><span class="f_Paragraph">Description of the source of the event. It could be the display name of the event source.</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:110px; padding:3px;"><p><span class="f_Paragraph">Time</span></p>
</td>
<td style="vertical-align:top; width:134px; padding:3px;"><p><span class="f_Paragraph">UtcTime</span></p>
</td>
<td style="vertical-align:top; width:102px; padding:3px;"><p><span class="f_Paragraph">Mandatory</span></p>
</td>
<td style="vertical-align:top; width:605px; padding:3px;"><p><span class="f_Paragraph">The time when the event occurs. This value is set as close to the event generator as possible.</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:110px; padding:3px;"><p><span class="f_Paragraph">ReceiveTime</span></p>
</td>
<td style="vertical-align:top; width:134px; padding:3px;"><p><span class="f_Paragraph">UtcTime</span></p>
</td>
<td style="vertical-align:top; width:102px; padding:3px;"><p><span class="f_Paragraph">Mandatory</span></p>
</td>
<td style="vertical-align:top; width:605px; padding:3px;"><p><span class="f_Paragraph">The time when the UA server receives the event.</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:110px; padding:3px;"><p><span class="f_Paragraph">LocalTime</span></p>
</td>
<td style="vertical-align:top; width:134px; padding:3px;"><p><span class="f_Paragraph">TimeZoneDataType</span></p>
</td>
<td style="vertical-align:top; width:102px; padding:3px;"><p><span class="f_Paragraph">Optional</span></p>
</td>
<td style="vertical-align:top; width:605px; padding:3px;"><p><span class="f_Paragraph">Time zone information of the location where the event occurred.</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:110px; padding:3px;"><p><span class="f_Paragraph">Message</span></p>
</td>
<td style="vertical-align:top; width:134px; padding:3px;"><p><span class="f_Paragraph">LocalizedText</span></p>
</td>
<td style="vertical-align:top; width:102px; padding:3px;"><p><span class="f_Paragraph">Mandatory</span></p>
</td>
<td style="vertical-align:top; width:605px; padding:3px;"><p><span class="f_Paragraph">A human readable description of the event.</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:110px; padding:3px;"><p><span class="f_Paragraph">Severity</span></p>
</td>
<td style="vertical-align:top; width:134px; padding:3px;"><p><span class="f_Paragraph">UInt16</span></p>
</td>
<td style="vertical-align:top; width:102px; padding:3px;"><p><span class="f_Paragraph">Mandatory</span></p>
</td>
<td style="vertical-align:top; width:605px; padding:3px;"><p><span class="f_Paragraph">The urgency (priority) of the event. Values are allowed between 1 (low) and 1000 (high).</span></p>
</td>
</tr>
</table>
</div>
<p class="p_Paragraph"><span class="f_Paragraph">&nbsp;</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The EventId is used to identify a specific state of a event or condition. Since simple events are transient the client cannot use the EventId at all - no persistent object in the server is available.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">For stateful conditions however the EventId is used to uniquely identify a specific condition in a specific state. Every change in the condition state shall be reported to the client - and with every notification sent to the client a new unique EventId is generated. Since the client has to use this unique EventId for any requests on a condition it is ensured that the request does not act on an old state.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">In the server every reported notification of a Condition or derived class is stored in the <a href="html_ancserverreporting.htm" class="topiclink">Event Registry</a>, which allows a mapping from the EventId to the Condition object.</span></p>
<h2 class="p_Heading2"><span class="f_Heading2">Server Perspective</span></h2>
<h3 class="p_Heading3"><a id="eventpropagation"></a><span class="f_Heading3">Event Propagation</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">HasNotifier References are used to define a hierarchy of notifying Objects.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">When an Object generates an event notification, the notification is re-emitted by all parent Objects</span></p>
<h3 class="p_Heading3"><img src="ac_eventpropagation.png" width="419" height="345" alt="AC_EventPropagation" style="width:419px;height:345px;border:none" /></h3>
<p class="p_ImageCaption"><span class="f_ImageCaption">Example of an address space with references used for event propagation</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">&nbsp;</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">Simple Events</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">Simple events are not represented in the address space. </span><br />
<span class="f_Paragraph">Instances of simple events are created for reporting only and were destructed after reporting.</span></p>
<p class="p_Paragraph"><img src="ac_eventtypehierarchy_zoom70.png" width="806" height="446" alt="AC_EventTypeHierarchy" style="width:806px;height:446px;border:none" /></p>
<p class="p_ImageCaption"><span class="f_ImageCaption">Hierarchy of simple event types</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The BaseEventType defines the common properties of all derived simple event and condition types.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The properties are described at <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_base_event_notification.htm" class="topiclink">BaseEventNotification</a> which is the base class of all implemented simple events. </span><br />
<span class="f_Paragraph">Additional simple events (e.g. SystemEventType) can be implemented in the application by deriving own classes from <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_base_event_notification.htm" class="topiclink">BaseEventNotification</a>.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Specialized event types (e.g. Audit Events) define additional properties which are accessible at the specific class definition.</span></p>
<h3 class="p_Heading3"><span class="f_Heading3">Conditions and Alarms</span></h3>
<p class="p_Paragraph"><span class="f_Paragraph">Conditions are used to represent the state of a system or one of its components.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">OPC UA defines many predefined condition and alarm types as shown in the diagram below.</span></p>
<p class="p_Paragraph"><img src="ac_conditiontypehierarchy.png" width="853" height="416" alt="AC_ConditionTypeHierarchy" style="width:853px;height:416px;border:none" /></p>
<p class="p_ImageCaption"><span class="f_ImageCaption">Hierarchy of condition types</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Both Condition and derived types define specific properties and / or methods to call. </span><br />
<span class="f_Paragraph">For specific definitions have a look at the specific types in the server classes within the reference manual. </span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The common properties for conditions are described at <a href="class_softing_o_p_c_toolbox5_1_1_server_1_1_condition.htm" class="topiclink">Condition</a> which is the base class of all implemented conditions and alarms. </span></p>
<h2 class="p_Heading2"><span class="f_Heading2">Client Perspective</span></h2>
<p class="p_Paragraph"><span class="f_Paragraph">A client can subscribe for events on every node which has the attribute &quot;EventNotifier&quot;.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">All events reported on this node are notified to the client. All events reported on nodes referenced from this object by a &quot;HasEventSource&quot; or derived reference are additionally notified.</span><br />
<span class="f_Paragraph">See <a href="html_programmersguide_alarms_conditions.htm#eventpropagation" class="topiclink">Event Propagation</a> describing propagation of events.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">A filter can be defined to restrict notifications to specific events.</span></p>
<h2 class="p_Heading2"><span class="f_Heading2">&nbsp;</span></h2>

      </td>
  </tr>
  <tr>
    <td colspan="2" style="padding-top: 0px;">
         <p>
            <hr />
            <a href="mailto:support.automation@softing.com?subject=OPC UA C++ Server &amp; Client SDK V6.00 Documentation Feedback:Page=html_programmersguide_alarms_conditions.htm">Send comments on this topic.</a>
         </p>
         <p>
            Copyright © Softing Industrial Automation GmbH&nbsp;2022
         </p>
    </td>
  </tr>
</table>
</body>
</html>
