<!DOCTYPE HTML>
<html>
<head>
   <title>Technical Details</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "html_securitytechnicaldetails.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">

<table width="100%" border="0" cellspacing="0" cellpadding="10">
  <tr valign="middle" bgcolor="#99CCFF">
    <td>
      <p>
        <table width="100%" border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td style="vertical-align:middle;">
              <p style="font-family:Verdana; font-size:9pt; font-style:italic;">OPC UA C++ Server &amp; Client SDK V6.00</p>
              <p style="font-family:Verdana; font-size:9pt; font-weight:bold;">Technical Details</p>
            </td>
          </tr>
        </table>
      </p>
    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="html_welcome.htm">Top</a>&nbsp;
     <a href="html_securityusecases.htm">Previous</a>&nbsp;
     <a href="html_securitycertificates.htm">Next</a>
     </span>
    </td>
  </tr>
  <tr bgcolor="white">
      <td colspan="2">
          <p class="p_Paragraph"><span class="f_Paragraph">OPC UA Security has many features that could be covered in a technical overview. Session establishment and certificate handling are two that are discussed here.</span></p>
<h2 class="p_Heading2"><span class="f_Heading2">Session establishment </span></h2>
<p class="p_Paragraph"><span class="f_Paragraph">The following figure illustrates the security interchange that occurs between an OPC UA client and OPC UA server when communication is established:</span></p>
<p class="p_Paragraph"><img src="ua_introduction_security_communicationestablishment.png" width="660" height="419" alt="UA_Introduction_Security_CommunicationEstablishment" style="width:660px;height:419px;border:none" /></p>
<p class="p_Paragraph"><span class="f_Paragraph">The illustrated exchanges show the use of asymmetric and symmetric keys for the establishment of a secure channel and a session. This exchange is part of the code provided by a SDK – all the client is required to do is make a call to open a connection. This call allows the communication (secure channel) to be established with the following options – “None”, “Sign” and “Sign and Encrypt”. The secure channel is always present even if “None” is selected. In the case of “None”, no security is applied but a logical channel with a unique identifier is maintained. Applications are expected to understand that a secure channel set to “None” cannot be trusted unless the application knows that it is operating on a physically secure network or if it knows that a low level protocol such as IPSec is being used. The actual symmetric and asymmetric algorithms that are used are specified as part of a security Profile. </span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The security mechanisms provided by the secure channel services are implemented by a protocol stack. OPC UA specifies two alternative stack mappings that can be used. These mappings are OPC UA Native mapping and Web services mapping. In the OPC UA Native mapping; the functionalities for confidentiality, integrity, application authentication, and the secure channel are similar to the SSL/TLS specifications. In the Web services mapping WS Security, WS Secure Conversation and XML Encryption as well as XML Signature are used to implement the mechanisms for confidentiality, integrity, application authentication as well as for implementing a secure channel. See OPC UA Part 6 – Mappings for more details on stacks and establishing secure channels.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The secure channel interchange is followed by a Session Activation that establishes a user identity. This user identity is necessary to determine what resources and operations the client has accessed to while connected to a server. When a client creates a session with a server it must pass proof of its user identity to the server. This proof is called a security Token and can take many forms. The types of security Tokens supported by an OPC UA server depend on the server implementation and the OPC UA Profiles that it supports. The entire interchange is illustrated in the figure below.</span></p>
<p style="margin: 0px 0px 0px 0px;"><img src="ua_introduction_sessionestablishment.png" width="645" height="435" alt="UA_Introduction_SessionEstablishment" style="width:645px;height:435px;border:none" /></p>
<p class="p_Paragraph"><span class="f_Paragraph">OPC UA also supports a brokered trust model where the OPC UA client does not pass its credentials directly to the OPC UA server. Instead, it passes the credentials to a trusted third party that provides a proof token that the OPC UA client must pass to the OPC UA server. The Kerberos implementation on Windows is a good example of the brokered trust model. The client application must first pass its windows credentials to Kerberos Ticket Granting service (TGS) and indicate which server host the client would like to access. The TGS will return a Kerberos Ticket that can be passed to the OPC UA server. The OPC UA server will then contact the TGS and verify that the ticket is valid.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">OPC UA defines some security Tokens that can be passed directly to the OPC UA server when a session is created. The tokens are:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph" style="font-weight: bold;">User Name:</span><span class="f_Paragraph"> This token allows clients to pass a username, password and/or password hash to the server. </span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph" style="font-weight: bold;">X509:</span><span class="f_Paragraph"> This token allows clients to pass the user identity as X509 token. Note that an X509 token used as proof of a user identity is usually not the same as OPC UA application instance token. </span></td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none"><span class="f_Paragraph" style="font-weight: bold;">Kerberos:</span><span class="f_Paragraph"> This token contains a Kerberos ticket. </span></td></tr></table></div><p class="p_Paragraph"><span class="f_Paragraph">The details of the security algorithms are contained in the security Profiles. In OPC UA Part 7 – Profiles each security profile includes a URI. A stack is expected to have built in knowledge of the security profiles that it supports. Applications specify the security Profile they wish to use by passing the URI to the stack.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The table depicted below defines the contents of a security profile. Each security protocol mapping specifies how to use each of the parameters in the security profile. A security protocol mapping may not make use of all of the parameters. </span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:193px; background-color:#99ccff; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph" style="font-weight: bold;">Name</span></p>
</td>
<td style="vertical-align:top; width:331px; background-color:#99ccff; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph" style="font-weight: bold;">Description</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:193px; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph">PolicyUri</span></p>
</td>
<td style="vertical-align:top; width:331px; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph">The URI assigned to the SecurityPolicy. </span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:193px; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph">SymmetricSignatureAlgorithm</span></p>
</td>
<td style="vertical-align:top; width:331px; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph">The URI of the symmetric signature algorithm to use. </span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:193px; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph">SymmetricEncryptionAlgorithm</span></p>
</td>
<td style="vertical-align:top; width:331px; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph">The URI of the symmetric key encryption algorithm to use. </span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:193px; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph">AsymmetricSignatureAlgorithm</span></p>
</td>
<td style="vertical-align:top; width:331px; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph">The URI of the asymmetric signature algorithm to use. </span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:193px; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph">AsymmetricKeyWrapAlgorithm</span></p>
</td>
<td style="vertical-align:top; width:331px; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph">The URI of the asymmetric key wrap algorithm to use. </span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:193px; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph">AsymmetricEncryptionAlgorithm</span></p>
</td>
<td style="vertical-align:top; width:331px; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph">The URI of the asymmetric key encryption algorithm to use. </span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:193px; height:4px; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph">KeyDerivationAlgorithm</span></p>
</td>
<td style="vertical-align:top; width:331px; height:4px; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph">The key derivation algorithm to use.</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; width:193px; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph">DerivedSignatureKeyLength</span></p>
</td>
<td style="vertical-align:top; width:331px; padding:3px;"><p class="p_Paragraph"><span class="f_Paragraph">The length in bits of the derived key used for message authentication.</span></p>
</td>
</tr>
</table>
</div>
<p class="p_Paragraph"><span class="f_Paragraph">The AsymmetricEncryptionAlgorithm is used when encrypting the entire message with an asymmetric key. Some security protocols do not encrypt the entire message with an asymmetric key. Instead, they use the AsymmetricKeyWrapAlgorithm to encrypt a symmetric key and then use the SymmetricEncryptionAlgorithm to encrypt the message. The AsymmetricSignatureAlgorithm is used to sign a message with an asymmetric key. The KeyDerivationAlgorithm is used to create the keys used to secure messages sent over the secure channel. The encryption key lengths are implied by the SymmetricEncryptionAlgorithm. The length of the keys used for creating symmetric signatures depends on the SymmetricSignatureAlgorithm and may be different from the encryption key length. The list of algorithms selected for a security profile is published with the Profile. The algorithms that were selected were based on what is commonly in use in industry and can be supported by standard Cryptographic libraries, and it is expected that new security profiles will be created as this list of commonly used algorithms changes.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Security profiles provide varying levels of security. Deprecated profiles (e.g. Basic128Rsa15 and Basic256) use encryption algorithms which are known to be broken and shall be no longer used. Choosing a higher level of encryption makes an application more secure, but causes additional overhead in the communication. The choice of a connection would depend on the site’s requirements, but it is desirable to have an application support all security profiles (except the deprecated), allowing the site to make the selection. Support for the various security profiles requires minimum work from a developer, since SDKs (and underlying Crypto library) provide the required support. </span></p>

      </td>
  </tr>
  <tr>
    <td colspan="2" style="padding-top: 0px;">
         <p>
            <hr />
            <a href="mailto:support.automation@softing.com?subject=OPC UA C++ Server &amp; Client SDK V6.00 Documentation Feedback:Page=html_securitytechnicaldetails.htm">Send comments on this topic.</a>
         </p>
         <p>
            Copyright © Softing Industrial Automation GmbH&nbsp;2022
         </p>
    </td>
  </tr>
</table>
</body>
</html>
