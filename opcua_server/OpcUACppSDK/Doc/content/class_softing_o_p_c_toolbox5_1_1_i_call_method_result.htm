<!DOCTYPE HTML>
<html>
<head>
   <title>ICallMethodResult Class Reference</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">

<table width="100%" border="0" cellspacing="0" cellpadding="10">
  <tr valign="middle" bgcolor="#99CCFF">
    <td>
      <p>
        <table width="100%" border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td style="vertical-align:middle;">
              <p style="font-family:Verdana; font-size:9pt; font-style:italic;">OPC UA C++ Server &amp; Client SDK V6.00</p>
              <p style="font-family:Verdana; font-size:9pt; font-weight:bold;">ICallMethodResult Class Reference</p>
            </td>
          </tr>
        </table>
      </p>
    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="html_welcome.htm">Top</a>&nbsp;
     <a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_request.htm">Previous</a>&nbsp;
     <a href="class_softing_o_p_c_toolbox5_1_1_i_configuration_version_data_type.htm">Next</a>
     </span>
    </td>
  </tr>
  <tr bgcolor="white">
      <td colspan="2">
          <p style="margin: 0px 0px 0px 0px;"><a id="class_softing_o_p_c_toolbox5_1_1_i_call_method_result"></a></p>
<p><span class="f_CodeExample">#include &quot;ICallMethodResult.h&quot;</span></p>
<p style="margin: 0px 0px 0px 0px;"><span style="font-size: 10pt; font-family: Arial; color: #000000;">&nbsp;</span></p>
<p><map name="map235" id="map235"><area shape="rect" coords="5,6,131,29" href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm" alt="" /><area shape="rect" coords="8,59,128,82" href="class_softing_o_p_c_toolbox5_1_1_call_method_result.htm" alt="" /></map><img src="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.gif" width="136" height="88" alt="class_softing_o_p_c_toolbox5_1_1_i_call_method_result" style="width:136px;height:88px;border:none" usemap="#map235" /></p>
<p class="p_Paragraph">The <a href="class_softing_o_p_c_toolbox5_1_1_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_call_method_result" class="topiclink">CallMethodResult</a> data type is used by the Call service (see <a href="class_softing_o_p_c_toolbox5_1_1_client_1_1_session.htm#class_softing_o_p_c_toolbox5_1_1_client_1_1_session_1a81ef6cd21b70a12445e46d0c76e3ee6e" class="topiclink">Client::Session::callMethods()</a>) to return a list of results for the called methods. </p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="ListOfMembers" style="width:100%; border:none; border-spacing:3px;">
<tr style="text-align:left;vertical-align:top;">
<td colspan="2" style="vertical-align:top; padding:0px;"><h2 class="p_Heading2"><span class="f_Heading2">Public Member Functions</span></h2>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual </p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a24658fc4b6b0ac44e5058d3185b31165" class="topiclink">~ICallMethodResult</a></span>()</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1acc597bc07920ced77128eda569516bbd" class="topiclink">getStatusCode</a></span>() const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual std::vector&lt; <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a> &gt;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a75f1b3d4a7ad3b1ed3d2bcb34e29e9aa" class="topiclink">getInputArgumentResults</a></span>() const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual std::vector&lt; <a href="class_softing_o_p_c_toolbox5_1_1_diagnostic_info.htm#class_softing_o_p_c_toolbox5_1_1_diagnostic_info" class="topiclink">DiagnosticInfo</a> &gt;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a6ad9f2cbfee0c2f251b2f1a2e1d26289" class="topiclink">getInputArgumentDiagnosticInfos</a></span>() const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual unsigned</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1aa4fb89d07f948f92608bafd7030e22de" class="topiclink">getOutputArgumentCount</a></span>() const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual const <a href="class_softing_o_p_c_toolbox5_1_1_i_value.htm#class_softing_o_p_c_toolbox5_1_1_i_value" class="topiclink">IValue</a> *</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a7e7675c74e5a27ef0db9b79dc5ccea52" class="topiclink">getOutputArgument</a></span>(unsigned index) const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual std::vector&lt; <a href="class_softing_o_p_c_toolbox5_1_1_value.htm#class_softing_o_p_c_toolbox5_1_1_value" class="topiclink">Value</a> &gt;</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a2ffd32af99fda8fe4983529c0c364743" class="topiclink">getOutputArguments</a></span>() const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1ab3675441379242338c065949dd6579f4" class="topiclink">set</a></span>(const ICallMethodResult *cp)=0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a></p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1acb593117b44f695eb24ef68b92b5adf0" class="topiclink">set</a></span>(const ICallMethodResult &amp;cp)=0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual int</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1af0f1526455b4122a27f2e90e812fc506" class="topiclink">compare</a></span>(const ICallMethodResult *other) const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual int</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a99cd7772b3056f76e79859c8be470cfd" class="topiclink">compare</a></span>(const ICallMethodResult &amp;other) const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual bool</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1ae88b2646c90cdf4bb9d5260c58ee5e5d" class="topiclink">operator==</a></span>(const ICallMethodResult &amp;other) const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual bool</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1aec5e33f2d040e1b3ecbb858f9b7f0850" class="topiclink">operator!=</a></span>(const ICallMethodResult &amp;other) const =0</p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><p style="text-align: right;">virtual void *</p>
</td>
<td style="vertical-align:top; padding:0px;"><p><span style="font-weight: bold;"><a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a8c2ee842ba554270ab9a7917ad5885a8" class="topiclink">getInternHandle</a></span>() const =0</p>
</td>
</tr>
</table>
</div>
<hr style="height:2px; color:#000000; border-width:0px; background-color:#000000;" /><p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a24658fc4b6b0ac44e5058d3185b31165"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <span style="font-weight: bold;">SoftingOPCToolbox5::ICallMethodResult::~ICallMethodResult</span>()<span class="f_CodeExample"> [virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Destructor </p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1acc597bc07920ced77128eda569516bbd"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::ICallMethodResult::getStatusCode</span>() const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns a status code for the method execution on the server. If at least one of the arguments did not meet the method's constraints (wrong data type, ...), the status code EnumStatusCode_BadInvalidArgument is returned. </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_call_method_result_1ad1754d617d4797424b5260c565e94fb1" class="topiclink">SoftingOPCToolbox5::CallMethodResult</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a75f1b3d4a7ad3b1ed3d2bcb34e29e9aa"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual std::vector&lt; <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a> &gt;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::ICallMethodResult::getInputArgumentResults</span>() const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns a list of status code for the provided input arguments (see <a href="class_softing_o_p_c_toolbox5_1_1_call_method_request.htm#class_softing_o_p_c_toolbox5_1_1_call_method_request_1ae5f03d2353a78cf9e687e23eb332bb86" class="topiclink">CallMethodRequest::getInputArguments()</a>). </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_call_method_result_1ac30a9f59b6820b8fe221cec90b1e3387" class="topiclink">SoftingOPCToolbox5::CallMethodResult</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a6ad9f2cbfee0c2f251b2f1a2e1d26289"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual std::vector&lt; <a href="class_softing_o_p_c_toolbox5_1_1_diagnostic_info.htm#class_softing_o_p_c_toolbox5_1_1_diagnostic_info" class="topiclink">DiagnosticInfo</a> &gt;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::ICallMethodResult::getInputArgumentDiagnosticInfos</span>() const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns diagnostic information that has been provided for each input argument of the called method. This list is empty if diagnostics information was not requested in the request or if no diagnostic information was encountered in processing of the request.</p>
<p class="p_Paragraph"><span class="f_Heading3">See also:</span></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 20px;"><table class="ParameterList" style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:2px;"><p><a href="class_softing_o_p_c_toolbox5_1_1_client_1_1_session.htm#class_softing_o_p_c_toolbox5_1_1_client_1_1_session_1a81ef6cd21b70a12445e46d0c76e3ee6e" class="topiclink">Client::Session::callMethods()</a> addInputArgumentDiagnosticInfo() </p>
</td>
</tr>
</table>
</div>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_call_method_result_1afd73f51aa7699206aca5a671ee408d3f" class="topiclink">SoftingOPCToolbox5::CallMethodResult</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1aa4fb89d07f948f92608bafd7030e22de"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual unsigned<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::ICallMethodResult::getOutputArgumentCount</span>() const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">The methods <a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1aa4fb89d07f948f92608bafd7030e22de" class="topiclink">getOutputArgumentCount()</a> and <a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a7e7675c74e5a27ef0db9b79dc5ccea52" class="topiclink">getOutputArgument()</a> are provided for efficient access to data. The semantics of these methods are documented in <a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a2ffd32af99fda8fe4983529c0c364743" class="topiclink">getOutputArguments()</a>. </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_call_method_result_1acf00cf09bae00a4b05a84f11289d26e3" class="topiclink">SoftingOPCToolbox5::CallMethodResult</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a7e7675c74e5a27ef0db9b79dc5ccea52"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual const <a href="class_softing_o_p_c_toolbox5_1_1_i_value.htm#class_softing_o_p_c_toolbox5_1_1_i_value" class="topiclink">IValue</a> *<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::ICallMethodResult::getOutputArgument</span>(unsigned <span class="f_Parameter">index</span>) const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">The methods <a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1aa4fb89d07f948f92608bafd7030e22de" class="topiclink">getOutputArgumentCount()</a> and <a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a7e7675c74e5a27ef0db9b79dc5ccea52" class="topiclink">getOutputArgument()</a> are provided for efficient access to data. The semantics of these methods are documented in <a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a2ffd32af99fda8fe4983529c0c364743" class="topiclink">getOutputArguments()</a>. </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_call_method_result_1ae971e913c5317f62d770367520f30d2e" class="topiclink">SoftingOPCToolbox5::CallMethodResult</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a2ffd32af99fda8fe4983529c0c364743"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual std::vector&lt; <a href="class_softing_o_p_c_toolbox5_1_1_value.htm#class_softing_o_p_c_toolbox5_1_1_value" class="topiclink">Value</a> &gt;<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::ICallMethodResult::getOutputArguments</span>() const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Returns a list of output argument values. An empty list indicates that there are no output arguments.</p>
<p class="p_Paragraph">The size and order of this list matches the size and order of the output arguments defined by the OutputArguments property of the method. </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_call_method_result_1a68b5d8603848dd81cbbaf8f16f467100" class="topiclink">SoftingOPCToolbox5::CallMethodResult</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1ab3675441379242338c065949dd6579f4"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::ICallMethodResult::set</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result" class="topiclink">ICallMethodResult</a> * <span class="f_Parameter">cp</span>)<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Copies the content of <span class="f_Parameter">cp</span> to this instance </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_call_method_result_1a5809a4ea757f53a068c6091c59435a90" class="topiclink">SoftingOPCToolbox5::CallMethodResult</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1acb593117b44f695eb24ef68b92b5adf0"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual <a href="_enums_8h_1a5df927645df244fef256862f16e3b790.htm#_enums_8h_1a5df927645df244fef256862f16e3b790" class="topiclink">EnumStatusCode</a><span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::ICallMethodResult::set</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result" class="topiclink">ICallMethodResult</a> &amp; <span class="f_Parameter">cp</span>)<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_call_method_result_1aba4b706afccf12bd2fd1fa68090ae6e4" class="topiclink">SoftingOPCToolbox5::CallMethodResult</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1af0f1526455b4122a27f2e90e812fc506"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual int<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::ICallMethodResult::compare</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result" class="topiclink">ICallMethodResult</a> * <span class="f_Parameter">other</span>) const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Compares this instance to the given <span class="f_Parameter">other</span> instance.</p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 5px 0px;"><table style="border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:0px;"><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">Returns &lt;0, if &quot;this &lt; other&quot; </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">Returns 0, if &quot;this == other&quot; </td></tr></table></div><div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 5px 0px 0px 0px;"><table border="0" cellpadding="0" cellspacing="0" style="border:none;border-spacing:0px;padding:0px;line-height: normal;"><tr valign="baseline" style="vertical-align:baseline"><td style="border:none;width:13px"><span style="font-size:9pt; font-family: 'Arial Unicode MS','Lucida Sans Unicode','Arial';color:#000000;">&#8226;</span></td><td style="border:none">Returns &gt;0, if &quot;this &gt; other&quot; </td></tr></table></div></td>
</tr>
</table>
</div>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_call_method_result_1a51dc69a56e4d9723d95dbc1e1bc03095" class="topiclink">SoftingOPCToolbox5::CallMethodResult</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a99cd7772b3056f76e79859c8be470cfd"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual int<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::ICallMethodResult::compare</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result" class="topiclink">ICallMethodResult</a> &amp; <span class="f_Parameter">other</span>) const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">This is an overloaded member function, provided for convenience. It differs from the above function only in what argument(s) it accepts. </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_call_method_result_1adf6802e4b983117b37985f4106b084ab" class="topiclink">SoftingOPCToolbox5::CallMethodResult</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1ae88b2646c90cdf4bb9d5260c58ee5e5d"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual bool<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::ICallMethodResult::operator==</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result" class="topiclink">ICallMethodResult</a> &amp; <span class="f_Parameter">other</span>) const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Compares two instances for equality </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_call_method_result_1afd0817db384e51f1d9f355629abf63a3" class="topiclink">SoftingOPCToolbox5::CallMethodResult</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1aec5e33f2d040e1b3ecbb858f9b7f0850"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual bool<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::ICallMethodResult::operator!=</span>(const <a href="class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_i_call_method_result" class="topiclink">ICallMethodResult</a> &amp; <span class="f_Parameter">other</span>) const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">Compares two instances for inequality </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_call_method_result_1af0c7e2c3791be773b4fd99ad31211e81" class="topiclink">SoftingOPCToolbox5::CallMethodResult</a>.</p>
</td>
</tr>
</table>
</div>
<p class="p_Table"><a id="class_softing_o_p_c_toolbox5_1_1_i_call_method_result_1a8c2ee842ba554270ab9a7917ad5885a8"></a></p>
<div style="text-align: left; text-indent: 0px; padding: 0px 0px 0px 0px; margin: 0px 0px 5px 0px;"><table class="Member" style="width:100%; border:none; border-spacing:0px;">
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; background-color:#99ccff; padding:3px;"><p>virtual void *<span style="font-size: 10pt; font-family: Arial; color: #000000;"> </span><span style="font-weight: bold;">SoftingOPCToolbox5::ICallMethodResult::getInternHandle</span>() const<span class="f_CodeExample"> [pure virtual]</span></p>
</td>
</tr>
<tr style="text-align:left;vertical-align:top;">
<td style="vertical-align:top; padding:3px;"><p class="p_Paragraph">For internal use only </p>
<p>Implemented in <a href="class_softing_o_p_c_toolbox5_1_1_call_method_result.htm#class_softing_o_p_c_toolbox5_1_1_call_method_result_1a31048e4bc62ebda04671bc065a231ae2" class="topiclink">SoftingOPCToolbox5::CallMethodResult</a>.</p>
</td>
</tr>
</table>
</div>

      </td>
  </tr>
  <tr>
    <td colspan="2" style="padding-top: 0px;">
         <p>
            <hr />
            <a href="mailto:support.automation@softing.com?subject=OPC UA C++ Server &amp; Client SDK V6.00 Documentation Feedback:Page=class_softing_o_p_c_toolbox5_1_1_i_call_method_result.htm">Send comments on this topic.</a>
         </p>
         <p>
            Copyright © Softing Industrial Automation GmbH&nbsp;2022
         </p>
    </td>
  </tr>
</table>
</body>
</html>
