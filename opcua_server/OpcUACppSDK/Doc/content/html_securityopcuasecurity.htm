<!DOCTYPE HTML>
<html>
<head>
   <title>OPC UA Security</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
   <script type="text/javascript" src="jquery.js"></script>
   <script type="text/javascript" src="helpman_settings.js"></script>
   <script type="text/javascript" src="helpman_topicinit.js"></script>

   <script type="text/javascript">
     HMSyncTOC("index.html", "html_securityopcuasecurity.htm");
   </script>
   <script type="text/javascript" src="highlight.js"></script>
   <script type="text/javascript">
     $(document).ready(function(){highlight();});
   </script>
</head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;">

<table width="100%" border="0" cellspacing="0" cellpadding="10">
  <tr valign="middle" bgcolor="#99CCFF">
    <td>
      <p>
        <table width="100%" border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td style="vertical-align:middle;">
              <p style="font-family:Verdana; font-size:9pt; font-style:italic;">OPC UA C++ Server &amp; Client SDK V6.00</p>
              <p style="font-family:Verdana; font-size:9pt; font-weight:bold;">OPC UA Security</p>
            </td>
          </tr>
        </table>
      </p>
    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="html_welcome.htm">Top</a>&nbsp;
     <a href="html_securitycomparisontoclassicopc.htm">Previous</a>&nbsp;
     <a href="html_securityusecases.htm">Next</a>
     </span>
    </td>
  </tr>
  <tr bgcolor="white">
      <td colspan="2">
          <p class="p_Paragraph"><span class="f_Paragraph">OPC UA may be deployed in multiple configurations as illustrated in the figure below and threats could come from multiple levels. OPC UA was designed and built with this model in mind.</span></p>
<p class="p_Paragraph"><img src="ua_introduction_opc_ua_security_zoom37.png" width="572" height="441" alt="UA_Introduction_OPC_UA_Security" style="width:572px;height:441px;border:none" /></p>
<p class="p_Paragraph"><span class="f_Paragraph">OPC UA establishes a secure communication channel as part of establishing a connection between an OPC UA client and an OPC UA server. This secure channel requires that the OPC UA server and OPC UA client have identified and verified each other. This identification makes use of application instance certificates. It can also include establishing an encrypted data interchange.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">Once a secure channel is established all communication uses this secure channel. The security for this channel is renewed periodically to ensure the channel remains secure. Once the secure channel is available a session is established which includes the identification of the client (user). Although a session communicates over a secure channel and has to be activated before it can be used, the binding of users, sessions, and secure channel is flexible. Impersonation allows the user of the session to change. A session can have a different user than the user that activated the session for the first time. When a secure channel breaks, the session will still be valid and it can be re-established. If a secure channel is not re-established, the session closes after its lifetime expires. </span></p>
<p class="p_Paragraph"><span class="f_Paragraph">OPC UA includes masks for all objects that indicate if the object is readable / writeable and if it is readable / writeable for the given user. The server can use the identity established as part of the session to set the access rights to various objects it exposes.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">All communication includes timestamps, session information and sequence numbers, these message headers insure that messages cannot be replayed or used out of order as part of an attack. To protect against alteration of messages, messages are signed (and optionally encrypted to protect against eavesdropping). Technical Details part of this section provides more information on the signing (and optional encryption) of messages.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">OPC UA provides support for Audit Events. OPC has defined a series of Audit Events that applications must generate (if they support auditing). These events provide a detailed history of what actions a user / application undertook on a system. They included events for most service calls and for the establishment of a connection and secure channel. OPC UA Part 2 – Security provides a good example of Auditing and OPC UA Part 5 – Information Model describes Audit Events that are available in OPC UA</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The detailed implementations of the security an OPC UA server or OPC UA client support are exposed via security Profiles. These security Profiles are also exposed in OPC UA servers via defined Endpoints allowing a client to quickly determine the available security schemes in a server. See Profile Reporting at <a href="https://opcfoundation-onlineapplications.org/ProfileReporting" target="_blank" class="weblink">https://opcfoundation-onlineapplications.org/ProfileReporting</a> for a list of security profiles.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The architecture of OPC UA is also important to security. OPC UA has a layered model, in that it has a transport layer, communication layer and an application layer. </span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The transport layer is an industry standard such as TCP or HTTP. New transports can be added in the future without changing the application. Transports can implement security, but OPC UA also provides security at the communication layer to ensure a consistent level of security is available. </span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The communication layer is provided by the OPC Foundation as a stack. This stack has been tested and reviewed from a security point of view by independent security experts. The addition of new transports can be accomplished by updates of an SDK, a toolkit or OPC UA stack without requiring changes to the OPC UA application. This would include adding new security Profiles. An application would only have to be re-linked against a new version of the SDK, toolkit or stack. The communication layer is handled by the establishment of a secure channel (see above discussion). To survive the loss of the transport layer connections (e.g. TCP connections) and resume with another, the implementation of the communication layer is responsible to re-establish the transport layer connection without interrupting the logical secure channel.</span></p>
<p class="p_Paragraph"><span class="f_Paragraph">The application layer provides the user related security. Changes to underling security protocol would have no effect on the application. The infrastructure for establishing a user identity is present in the SDK, but the developer of an application would have to implement the user related security on objects or features. The application layer includes the establishment of a session. </span></p>

      </td>
  </tr>
  <tr>
    <td colspan="2" style="padding-top: 0px;">
         <p>
            <hr />
            <a href="mailto:support.automation@softing.com?subject=OPC UA C++ Server &amp; Client SDK V6.00 Documentation Feedback:Page=html_securityopcuasecurity.htm">Send comments on this topic.</a>
         </p>
         <p>
            Copyright © Softing Industrial Automation GmbH&nbsp;2022
         </p>
    </td>
  </tr>
</table>
</body>
</html>
